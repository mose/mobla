<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Moselog</title>
    <link>http://blog.mose.com/</link>
    <description>Recent content on Moselog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Jan 2016 22:10:31 +0800</lastBuildDate>
    <atom:link href="http://blog.mose.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Greenruby 156</title>
      <link>http://blog.mose.com/2016/01/31/greenruby-156</link>
      <pubDate>Sun, 31 Jan 2016 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2016/01/31/greenruby-156</guid>
      <description>

&lt;h2 id=&#34;3-years-of-green-ruby:183ee6564ab7e32d81baa05c527bf345&#34;&gt;3 years of Green Ruby&lt;/h2&gt;

&lt;p&gt;Well, almost 3 years. &lt;a href=&#34;http://greenruby.org/grn-001.html&#34;&gt;Green Ruby #1&lt;/a&gt; was sent on feb 12th, 2013. Since
then, we sent 156 editions, one per week without discontinuation, including a
total of 5556 links. There is now 1691 subscribers to the newsletter. That&amp;rsquo;s
quite something, for a mail that was just sent to some friends at the
beginning.&lt;/p&gt;

&lt;p&gt;During all this time, things didn&amp;rsquo;t change that much. In july 2013 the code
was put on github and the process didn&amp;rsquo;t change much since then. I got a
Rakefile to build the letter from yaml files and there is no need to change
it. For the first 2 years Xenor was sending me some links by mail every weeks,
then in 2015 Tysliu got back in and we used git to get both of their
contributions. Later on, we got the slack channel where we throw between 10 to
30 links per weeks that I do my selection from. Nauman recently proved to be
the most prolific contributor on slack. (btw if you want to join our slack
group, it&amp;rsquo;s pretty open, just fire me an email).&lt;/p&gt;

&lt;p&gt;We still don&amp;rsquo;t have any business project behind this publication. We are just
a group of friends that like to keep in touch with the current trends, and
that like to share the result of our weekly workout with our fellow coder
brothers and sisters. Soon we will reach the limit of the free mailchimp usage
(at 2000 subscribers), and that will be an interesting time. We will then ask
people to unsubscribe if they don&amp;rsquo;t read the letter. Maybe registration will
be closed if we reach the hard limit. But there is no plan to become a
sustainable money-based adventure. So we&amp;rsquo;ll keep the cost to the minimum.&lt;/p&gt;

&lt;p&gt;If you feel any gratefulness at all, pay it forward. Share your knowledge
around you. Publish more open source code. Hug a friend or a stranger. Be nice
and tolerant. Send some thank-you email to someone that published some open
source code that saved your day. Love is wealth.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 155</title>
      <link>http://blog.mose.com/2016/01/24/greenruby-155</link>
      <pubDate>Sun, 24 Jan 2016 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2016/01/24/greenruby-155</guid>
      <description>

&lt;h2 id=&#34;the-future-of-under-engineering:fcbdcc9c124e7d704858d627998434f7&#34;&gt;The future of under-engineering&lt;/h2&gt;

&lt;p&gt;Recently Marcelo told me, that&amp;rsquo;s weird, how we do 10% research and
specification, 40% implementation and 50% debugging in this industry. I&amp;rsquo;m more
used to 70% research and specification, 20% implementation and 10% debugging.
He was working in the hardhware industry for a while, and just came to a
service-based company. This is actually a very interesting remark and it
reminded me when I was in my twenties when I was working as a construction
worker.&lt;/p&gt;

&lt;p&gt;When I was young there was no internet and I had a 10 years break from
computers. I had to take stupid jobs like working on construction sites for
low wages. After that I went to art school and later on I worked on building
sets for business shows. I have been shocked by the gap between those 2
worlds. When building a house, there is so much time spent writing plans,
thinking things in advance. While in the show-business construction pattern,
it was mostly about improvisation and managing inflexible time constraints,
with one-time-use construction.&lt;/p&gt;

&lt;p&gt;I feel there is the same gap in the software industry. Well it&amp;rsquo;s not exactly
the same for sure, but the paradigm feels alike. In service software
production, SaaS or ISP businesses, we tend to under-engineer the production.
There are perfectly legitimate reasons for that, the life-cycle of a platform
of service is quick, volatile and the value is not in the software asset but
in the customer-user experience.&lt;/p&gt;

&lt;p&gt;The Agile organization model reinforces this pattern, by providing a
substitute to the early specifications, in the form of user experiences
description. All this is fine and good. For a time. But with years passing we
can see so many occurrences of &amp;lsquo;temporary&amp;rsquo; projects becoming indestructible
legacy monsters. It&amp;rsquo;s like there was some kind of tipping point where the
development should shift from under-engineered to well-engineered but it&amp;rsquo;s
rarely anticipated properly enough.&lt;/p&gt;

&lt;p&gt;But it&amp;rsquo;s pretty hard to address that kind of problem. Throwing away the early
instances is very costly, especially when the organization is shaped by a
fast-paced reactive production model. Introducing proper engineering at early
stages is also not a clever option, as the product has to adapt to the
service, which depends on a constant feedback loop with the users.&lt;/p&gt;

&lt;p&gt;I have the feeling that there is something missing. Like an evolution of agile
that could include seeds of later engineering. Some way to make possible to
start fast, and evolve in a solid and slower model later on without crisis or
disruption. This is the perspective that I think was missing in &lt;a href=&#34;http://www.businessinsider.com/why-computer-programmers-need-to-stop-calling-themselves-engineers-already-2015-11&#34;&gt;that
article&lt;/a&gt; I cited on green ruby 145. But I don&amp;rsquo;t know the answer to
that problem. I suspect it will emerge by itself in the few next years.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 153</title>
      <link>http://blog.mose.com/2016/01/10/greenruby-153</link>
      <pubDate>Sun, 10 Jan 2016 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2016/01/10/greenruby-153</guid>
      <description>

&lt;h2 id=&#34;that-micro-service-thing:46752485ca0dcc4b52fef655c3c60574&#34;&gt;That micro-service thing&lt;/h2&gt;

&lt;p&gt;For a while now, and more even since the rise of docker, it becomes a trend to
split applications in parts and approach them as a collection of
micro-services. This is not exactly new, I remember in 2002 having seen
various applications based on this concept. But they had shortcomings.
Development was harder and it imported a whole bunch of increased complexity
because there was a lot of moving parts.&lt;/p&gt;

&lt;p&gt;In a project that I have the occasion of following, I can watch the migration
from monolith to micro-service and I can tell you, the architecture change is
not simple technical decision. By splitting application there is a whole lot
of application aspects that move out of the area of the developers team and
are now the responsibility of the infrastructure team. The shift cannot be
taken lightly.&lt;/p&gt;

&lt;p&gt;From what I observed, the switch to micro-services can only be efficient if
there was already a shift to a real devops organization. It means that the
development and the infrastructure are more tightly coupled. Otherwise, it&amp;rsquo;s
just a mess. The QA also can get crazy, and the networking layer gets
increased complexity (or even dramatic latencies). Errors and services
resilience also need an extra layer of attention.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t move to micro-services if you are not ready for it, seriously, it can
end up by shooting yourself in the foot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 152</title>
      <link>http://blog.mose.com/2016/01/03/greenruby-152</link>
      <pubDate>Sun, 03 Jan 2016 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2016/01/03/greenruby-152</guid>
      <description>

&lt;h2 id=&#34;here-is-2016:af177e0d6352be87fe53a31db08b69a8&#34;&gt;Here is 2016&lt;/h2&gt;

&lt;p&gt;Well in this last week of 2015, the have not been that much publication and
the list of links is shorter than usual. Everybody is probably just having a
life for a change, which is a good things :)&lt;/p&gt;

&lt;p&gt;There is a lot of promising trends that may unleash in the coming year. I hope
to see what ruby 3 will bring. Rails 5 is already almost out there too. But
there is some interesting move on the side of Elixir as well, even if it&amp;rsquo;s
still very young and hacky in my opinion.&lt;/p&gt;

&lt;p&gt;On the frontend side, there is that big news that was announced last year,
with &lt;a href=&#34;https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support&#34;&gt;Microsoft ditching IE old versions&lt;/a&gt; officially on january 12,
it will be on tuesday next week. IE 11 would become the only supported
version. A bold but welcome move. Maybe it will help adoption of JS recent
native APIs. I suspect that if IE dies, jquery will not make any sense anymore
as the JS stack will be more consistent then. But maybe I&amp;rsquo;m wrong, that&amp;rsquo;s just
an intuition. And the end of support doesn&amp;rsquo;t mean there will be an instant
extinction of old IEs, it may still take some more time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 151</title>
      <link>http://blog.mose.com/2015/12/27/greenruby-151</link>
      <pubDate>Sun, 27 Dec 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/12/27/greenruby-151</guid>
      <description>

&lt;h2 id=&#34;happy-end-of-2015:602bde3b83227cc35adf0ad4ea322068&#34;&gt;Happy end of 2015&lt;/h2&gt;

&lt;p&gt;Take good time, use the calendar rotation as a pretext to have good
resolutions, get wasted like if you were a teenager (wait, what? we all are
teenagers here?), or do whatever makes you happy if like me you prefer to
remain sober. See you in 2016.&lt;/p&gt;

&lt;h2 id=&#34;slackcast-2016:602bde3b83227cc35adf0ad4ea322068&#34;&gt;SlackCast 2016&lt;/h2&gt;

&lt;p&gt;We had a lot of discussion with Nauman Tariq about how to make slack usage
more lively, more useful, and such things. We worked together on a concept of
event that we want to try next weekend. It will happen next Saturday (Jan 2nd)
around 23:00 UTC (more or less 4 hours). If you want to participate, please
shoot me an &lt;a href=&#34;mailto:mose@greenruby.org&#34;&gt;email&lt;/a&gt;, and we&amp;rsquo;ll give you the precise time when we know
it, plus the how-to-join-in. It will be a first time, it won&amp;rsquo;t be perfect, but
it will be a lot of fun.&lt;/p&gt;

&lt;p&gt;Read more about it on the &lt;a href=&#34;https://slack-files.com/T05052K3Q-F0FSX2GHG-3330dc8ef1&#34;&gt;SlackCast manifesto&lt;/a&gt;. You also can join
&lt;a href=&#34;http://www.rubyonrails.link/&#34;&gt;rubyonrails.link&lt;/a&gt;, that&amp;rsquo;s where it will happen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 150</title>
      <link>http://blog.mose.com/2015/12/20/greenruby-150</link>
      <pubDate>Sun, 20 Dec 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/12/20/greenruby-150</guid>
      <description>

&lt;h2 id=&#34;150-weeks:4ed16e5b224ff8e7f398b527b88e0d35&#34;&gt;150 weeks&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s kind of a round number, this 150th edition of the Green Ruby Newsletter
is an occasion to see where we are. At this day there are 1,610 subscribers to
the email newsletter. The website has around 250 unique visits per day, which
mostly are RSS readers. Those are anecdotal numbers. As we have no intention
to monetize this initiative, it doesn&amp;rsquo;t matter that much. Soon we will enter
in the red zone in the amount of subscribers and we will need to push some
people out, those who forgot about the newsletter but also forgot to
unsubscribe. It will happen when we reach 1,800 (because Mailchimp is still
free under 2,000 subscribers).&lt;/p&gt;

&lt;p&gt;During the whole life of the publication, we never missed one week. Last week,
thanks to Xenor, I even could have some rest. Now I&amp;rsquo;m better, flu never last.
We also have, for a couple of months, much more links contributions (thanks
Nauman Tariq). All in all, our model seems to have been pretty sustainable.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 148</title>
      <link>http://blog.mose.com/2015/12/06/greenruby-148</link>
      <pubDate>Sun, 06 Dec 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/12/06/greenruby-148</guid>
      <description>

&lt;h2 id=&#34;busy-hackathon-in-taipei:b4b86de420849d53ccbec354ab20a437&#34;&gt;Busy hackathon in Taipei&lt;/h2&gt;

&lt;p&gt;This weekend we had our first &lt;a href=&#34;http://hackathon.taipei/en.html&#34;&gt;hackathon&lt;/a&gt; in Taipei, organized by
&lt;a href=&#34;http://gandi.net&#34;&gt;Gandi&lt;/a&gt;. That was pretty fun, to be there on the side of the organizers
without actually being in charge of the organization for once. Such geek
events are always so great for meeting and sharing, being forbidden to
participate didn&amp;rsquo;t prevent me to push some ideas around.&lt;/p&gt;

&lt;p&gt;During the course of the weekend, I joined mickey to push the creation of a
&lt;a href=&#34;https://github.com/elixirtw/elixir_tw&#34;&gt;Taiwan group for Elixir&lt;/a&gt;, for which we had an idea of a stream
capture feature to gather slack discussion and index them. I also had an idea
of event for &lt;a href=&#34;https://github.com/FreeBSDTaiwan/portscamp&#34;&gt;FreeBSD portscamp&lt;/a&gt; with marcelo, so we made a FreeBSD
Taiwan group on github as well (with a pretty neat logo). All this was
actually not that much related to the hackathon but just emerging from natural
proximity with other geeks.&lt;/p&gt;

&lt;p&gt;Check my &lt;a href=&#34;https://www.flickr.com/photos/43946968@N07/albums/72157661448405060&#34;&gt;photos on flickr&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 147</title>
      <link>http://blog.mose.com/2015/11/29/greenruby-147</link>
      <pubDate>Sun, 29 Nov 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/11/29/greenruby-147</guid>
      <description>

&lt;h2 id=&#34;code-in-the-dark:f6454540d52b5466477bc9e3371f78a1&#34;&gt;Code in the dark&lt;/h2&gt;

&lt;p&gt;My attention was brought this week to &lt;a href=&#34;http://codeinthedark.com/&#34;&gt;Code in the dark events&lt;/a&gt;. It seems
pretty cool. A 15 minutes race in html and css with no preview. But the thing
that brought my attention to that format is the special editor used for those
events with a special effect on the cursor. It seems to add a really dramatic
effect on the competition. We need more ideas like that for pure geek fun.&lt;/p&gt;

&lt;h2 id=&#34;first-look-at-perl-6:f6454540d52b5466477bc9e3371f78a1&#34;&gt;First look at perl 6&lt;/h2&gt;

&lt;p&gt;For many people, Perl sounds like trauma. Because it didn&amp;rsquo;t move for a while,
when I hear something is perl code, it sounds like it&amp;rsquo;s legacy code, old and
dusty. Well, Perl 6 is going to come out for christmas and the situation may
change. Perl 6 is in the lab for &lt;a href=&#34;http://www.perlfoundation.org/perl6/index.cgi?when_will_perl_6_be_released&#34;&gt;15 years&lt;/a&gt; now, it&amp;rsquo;s more than
time to get it shipped.&lt;/p&gt;

&lt;p&gt;At &lt;a href=&#34;http://doc.perl6.org/language/5to6-nutshell&#34;&gt;first glance&lt;/a&gt;, they seem to have tried to &amp;lsquo;modernize&amp;rsquo; the language,
make it more idiomatic. It even seems it looks more like ruby, with the
replacement of arrow by dots, the optional parenthesis, better exception
handling. Well, overall, it feels cleaner. But it also seem to have some
potential to mix functional and object-oriented in an interesting way.&lt;/p&gt;

&lt;p&gt;So, maybe there is going to be a second life for the old perl. It&amp;rsquo;s a breaking
version, old perl code will certainly break on the new version. So it&amp;rsquo;s almost
like a new language. For sure I will still keep ruby as my preferred language,
but I like multilingualism, so maybe I will give it a try .. again (last perl
app I wrote was 12 years ago).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 146</title>
      <link>http://blog.mose.com/2015/11/22/greenruby-146</link>
      <pubDate>Sun, 22 Nov 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/11/22/greenruby-146</guid>
      <description>

&lt;h2 id=&#34;a-hackhaton-in-taipei:118c2d49c9d42e8c5462859981122936&#34;&gt;A Hackhaton in Taipei&lt;/h2&gt;

&lt;p&gt;In 2 weeks Gandi organizes with .taipei registry a &lt;a href=&#34;http://hackathon.taipei/&#34;&gt;Hackhaton&lt;/a&gt; with
pretty wide topic. It will be at at the Hi-tech Promotion Center in Taipei on
December 5 and 6. I will be there (part of the jury), so if you want to have
some week-end fun and are in Taipei at that time, feel free to join in. There
will be prizes, free domains and hosting. I would love to see some ruby
projects there.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 145</title>
      <link>http://blog.mose.com/2015/11/15/greenruby-145</link>
      <pubDate>Sun, 15 Nov 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/11/15/greenruby-145</guid>
      <description>

&lt;h2 id=&#34;more-about-bullies:7d0bd163d3b6e38d12756fdafb7e56e1&#34;&gt;More about bullies&lt;/h2&gt;

&lt;p&gt;This week I read the &lt;a href=&#34;http://devblog.avdi.org/2015/11/09/software-bullying/&#34;&gt;reaction of Avdi&lt;/a&gt; to the rant of Linus last
week. He proposes a short but insightful angle by just naming it &amp;lsquo;bullying&amp;rsquo;.
It rejoins the damage that I consider the coder-hero culture brings to our
industry.&lt;/p&gt;

&lt;p&gt;Certainly the creative process of writing software attract creative people.
They have strong personalities, some have tendencies to mild autism. They move
mountains and their pride make them work day and night to achieve unbelievable
things.&lt;/p&gt;

&lt;p&gt;This is good and well, but on the long run, now that we are passing 2
generations of coders, we know that it&amp;rsquo;s not sustainable on the long run.
Plus, it has a disastrous impact on team building. No pyramid was built by a
single hero.&lt;/p&gt;

&lt;p&gt;Incidentally I also read an interesting article about &lt;a href=&#34;http://www.businessinsider.com/why-computer-programmers-need-to-stop-calling-themselves-engineers-already-2015-11&#34;&gt;Why computer
programmers need to stop calling themselves engineers already&lt;/a&gt;.
Even if I can&amp;rsquo;t clearly explain how this is related, I have the feeling it&amp;rsquo;s
talking about something that is in the same area.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 144</title>
      <link>http://blog.mose.com/2015/11/08/greenruby-144</link>
      <pubDate>Sun, 08 Nov 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/11/08/greenruby-144</guid>
      <description>

&lt;h2 id=&#34;packaging-a-gem-for-debian:2e8a1de1525658978fef3574497ed77d&#34;&gt;Packaging a gem for Debian&lt;/h2&gt;

&lt;p&gt;Recently I had to package a gem for debian as a .deb. As a matter of fact,
there is a lot of companies that are not in the ruby ecosystem and they rely
on things they trust rather than rubygems. For a while debian was way behind
on the inclusion of ruby and versions were outdated there. So a parallel
distribution ecosystem had to be created. Now we have rvm, rbenv, or chruby
for ruby and bundler and rubygems for the packages. But where I work, they
package everything as debian packages. So I had to adapt.&lt;/p&gt;

&lt;p&gt;So I went have a look at &lt;a href=&#34;https://wiki.debian.org/Teams/Ruby&#34;&gt;the debian ruby team&lt;/a&gt; and checked out
the tools. That gem2deb tool is pretty convenient. I am using debian for a
while but never really had to package anything. The debian community process
is a bit complicated and they are not very inclusive. Compared to the ease of
uploading any gem to rubygems, it&amp;rsquo;s quite a fortress, and people in the
process are not very welcoming.&lt;/p&gt;

&lt;p&gt;Maybe it&amp;rsquo;s generational. Debian started before sourceforge existed, they are
rooted in a community tradition that are very exclusive and a bit elitist. But
technology changes faster than people, obviously. Younger communities
bootstrap in a more fluid environment.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not sure it is related but maybe it is, there was another epic [Linus
Hit][liushit] recently. Well, all those things put in perspective the niceness
of the ruby community. Really, cherish it and enjoy it, it&amp;rsquo;s precious.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 143</title>
      <link>http://blog.mose.com/2015/11/01/greenruby-143</link>
      <pubDate>Sun, 01 Nov 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/11/01/greenruby-143</guid>
      <description>

&lt;h2 id=&#34;the-power-of-dsl:ab3ba7ed22eeaa19b0cb56ca8c01c80b&#34;&gt;The power of DSL&lt;/h2&gt;

&lt;p&gt;While I was playing with &lt;a href=&#34;https://github.com/zetachang/react.rb&#34;&gt;react.rb&lt;/a&gt; and exploring &lt;a href=&#34;http://opalrb.org/&#34;&gt;opal&lt;/a&gt;, I
felt in a totally different world. The power of the DSL already prove its
shine on various occasions. I got to experience it in activeadmin, rspec, and
puppet (but I kind of dislike the one in puppet).&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;m also writing some python, I can see a real difference in expressibility
that can be found in ruby. Really, ruby is a maker tool. Like a toolbox for
making new programming languages, using meta-programming, lambda and other
goodies. This is what, in my opinion, makes ruby unique. Beyond the elegance
of its syntax, it empowers developers with the ability to write dedicated
programming language for any specific use. And this, I didn&amp;rsquo;t find in python.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 142</title>
      <link>http://blog.mose.com/2015/10/25/greenruby-142</link>
      <pubDate>Sun, 25 Oct 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/10/25/greenruby-142</guid>
      <description>

&lt;h2 id=&#34;dst-sucks:30c8323f12e415f49a8e753e970d1ab8&#34;&gt;DST sucks&lt;/h2&gt;

&lt;p&gt;This week-end they changed time in France. As I work with those guys to cover
the watching of servers, then I need to change time too. This is totally lame.
In the context of largely distributed teams, DST is heresy. It happens in the
US too, but not even at the same time. Man I hate DST. I&amp;rsquo;m happy we don&amp;rsquo;t have
that in Taiwan.&lt;/p&gt;

&lt;h2 id=&#34;thunderbird-sucks-too:30c8323f12e415f49a8e753e970d1ab8&#34;&gt;Thunderbird sucks too&lt;/h2&gt;

&lt;p&gt;Despite the respect I have for mozilla products and for their efforts toward
the community, I have to say that I have been using thunderbird for a while
and I don&amp;rsquo;t like it. There is some lack of customability in there, it eats a
whole lot of memory and it&amp;rsquo;s kinda slow sometimes. I have been considering
getting back to mutt, which is a totally different category of mail client.&lt;/p&gt;

&lt;p&gt;But I found &lt;a href=&#34;http://www.claws-mail.org/&#34;&gt;claws&lt;/a&gt;, and trying it for a few days on my various
mailboxes with hundreds of thousands of mails, and it is a very good feeling.
It&amp;rsquo;s much more transparent and hackable and stays in the same category of the
clickable mail client as thunderbird. I&amp;rsquo;m not sure I will stick to claws,
maybe I will get back to mutt that I have been used so many years before. But
I sure will give that &amp;lsquo;email client that bites&amp;rsquo; a try for a while.&lt;/p&gt;

&lt;h2 id=&#34;gmail-sucks-more:30c8323f12e415f49a8e753e970d1ab8&#34;&gt;Gmail sucks more&lt;/h2&gt;

&lt;p&gt;I still can&amp;rsquo;t figure out why people use gmail for reading their mail. I mean,
you leave management of your mail to google, you know what they do with it.
You also want to give them information about how you read your mail? I mean,
using a webmail, first, should be a fallback. But it&amp;rsquo;s mystery for nobody that
google business is in profiling people. It blasts me how people can trust them
blindly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 140</title>
      <link>http://blog.mose.com/2015/10/11/greenruby-140</link>
      <pubDate>Sun, 11 Oct 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/10/11/greenruby-140</guid>
      <description>

&lt;h2 id=&#34;slack-overflow:94c85cedf808f313200328bd388deb80&#34;&gt;Slack overflow&lt;/h2&gt;

&lt;p&gt;Okay I reckon I&amp;rsquo;m very old school. I began on the net with irc and I still stick to it. I have been confused by the trend that make people use Twitter like if it was some kind of real-time interactive medium. I have watched skype becoming unavoidable, and despicable. I hope &lt;a href=&#34;https://telegram.org/&#34;&gt;Telegram&lt;/a&gt; will kill it, honestly.&lt;/p&gt;

&lt;p&gt;I have been using hipchat and slack for work. Hipchat was really cool, but slack came later on and seemed more modern and featurefull. But it didn&amp;rsquo;t have a linux client for a while. So I didn&amp;rsquo;t really played much with it. But now there is a linux client, and it seems that there is an ecosystem nuilding up around slack. As they don&amp;rsquo;t charge for normal usage until you need many integrations with various services, it&amp;rsquo;s pretty easy for anyone to create some new slack team.&lt;/p&gt;

&lt;p&gt;Slack was first designed for teams, and those teams are gathered by invite only. But there are many ways to smooth it up to create some open discussion area that could be compared to irc. But in a way that it includes features that on irc I had to settle myself. For example for sharing code on irc you typically use some pastebin, jsfiddle, or other service of the same kind. In slack code can be pasted in directly or uploaded as a file. For keeping some kind of permanence I always use weechat in a screen on a remote server. That way I never disconnect form irc and I can backlog when I get back. But this is not for everybody and slack has the same kind of feature. But the most noticeable feature in slack is the mobile integration. It beats irc without a doubt.&lt;/p&gt;

&lt;p&gt;Given those benefits, various communities begin to switch from irc to slack. There are even people building up a business creating communities on slack. Check &lt;a href=&#34;http://www.slacklist.info/&#34;&gt;slacklist&lt;/a&gt; or the &lt;a href=&#34;http://chats.directory/&#34;&gt;chat directory&lt;/a&gt;. Some of those slack teams are open, some others are accessible after a review process, some others you have to pay a fee to access them.&lt;/p&gt;

&lt;p&gt;I would not say that slack replaces irc, to be honest, even if it fulfills some similar goal. It&amp;rsquo;s a totally different beast. Plus, that&amp;rsquo;s a third party that keeps all your logs. If security of your content is an issue, you should rather have an internal irc server or try an open source self-hosted slack alternative.&lt;/p&gt;

&lt;p&gt;Currently I got 6 groups on my slack client, including the &lt;a href=&#34;https://greenruby.slack.com/&#34;&gt;Greenruby slack group&lt;/a&gt;. You can ask for an invite at &lt;a href=&#34;mailto:news@greenruby.org&#34;&gt;slack@greenruby.org&lt;/a&gt; it&amp;rsquo;s totally open.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 136</title>
      <link>http://blog.mose.com/2015/09/13/greenruby-136</link>
      <pubDate>Sun, 13 Sep 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/09/13/greenruby-136</guid>
      <description>

&lt;h2 id=&#34;rubyconf-tw:6a0e12fe1d32b33b0719139f3561d417&#34;&gt;Rubyconf TW&lt;/h2&gt;

&lt;p&gt;So these last 2 days we went to RubyConfTW here in Taipei, like every year. At
that occasion I kinda forced my buddies to take part in this rant section. So,
that occasion of meeting the ruby community was as usual very enjoyable. Year
after year we see the same people, the community is solid and persistent.&lt;/p&gt;

&lt;p&gt;Like last years Matz was here and he talked about ruby 3 and, that was a
surprise to me, he talked about getting rid of the GIL very soon. That GIL
topic has been a taboo for so many years. Getting rid off it can change the
position of ruby in the family of the major scripting languages. He also
defined laziness as one of the 3 required characteristics of a good coder. I&amp;rsquo;m
not sure there is anything mainstream about those 3 qualities but for a long
time I had my set of 3 requirements to evaluate a good coder and laziness was
in it. maybe I will develop more about it in another rant.&lt;/p&gt;

&lt;p&gt;During this conference I also had the occasion to hear a lot of direct
feedback from friends of Green Ruby. For example we have an irc channel but
many people are not that comfortable with that chat system from another
century and would prefer a slack room. As a matter of fact we have such a
room, but we forgot about it for the past year. It&amp;rsquo;s alive again, feel free to
send a request for invite to news at greenruby.org to join
&lt;a href=&#34;http://greenruby.slack.com&#34;&gt;http://greenruby.slack.com&lt;/a&gt;. It&amp;rsquo;s open to everybody.&lt;/p&gt;

&lt;h2 id=&#34;rubyconftw-by-xenor:6a0e12fe1d32b33b0719139f3561d417&#34;&gt;Rubyconftw by xenor&lt;/h2&gt;

&lt;p&gt;Hey I&amp;rsquo;m xenor and this is my first rant in Green Ruby News about (and not
about) &lt;a href=&#34;http://2015.rubyconf.tw/&#34;&gt;rubyconftw&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I work in a ruby shop and manage a couple of people, and I am recently feeling
burned-out. It affects motivation and productivity. I am in a position which
involves watching over colleagues output. But I also have my own coding
projects ongoing.&lt;/p&gt;

&lt;p&gt;At first it&amp;rsquo;s great and challenging. But after half a year, it starts to bite
me back. I get tired and anxious about not meeting my goal at the end of the
day while checking others progress. I also need more breaks than usual. The
typical burn-out syndrome.&lt;/p&gt;

&lt;p&gt;Rubyconf gave me a break so that I can rethink what I was doing and how I can
evaluate things around me. During the conference, I found some time to do
&lt;a href=&#34;https://github.com/tubaxenor/squeezer&#34;&gt;side project&lt;/a&gt;. This really helps and re-motivates me on programming
(I believe this could be called &amp;lsquo;Conference Driven Development&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;You might wonder why I didn&amp;rsquo;t say anything about the talks. Actually, talks
are just as great as all other conferences, and can be watched on the
recordings that they will post soon. But the most important part is really the
atmosphere of encouragement to try and learn something new.&lt;/p&gt;

&lt;h2 id=&#34;rubyconftw-by-tysliu:6a0e12fe1d32b33b0719139f3561d417&#34;&gt;Rubyconftw by tysliu&lt;/h2&gt;

&lt;p&gt;Greetings. This is tysliu and this is also my first rant and my experience
from going to 2015 Rubyconf TW.&lt;/p&gt;

&lt;p&gt;The main benefit from attending rubyconf this year is that I said hello to
more people. I met past colleagues and also new people. It feels nice to see
familiar faces and catch up.&lt;/p&gt;

&lt;p&gt;The most interesting talk for me this years was tenderlove&amp;rsquo;s talk. It was
about how he attacked the issue of making Rails HTTP2 friendly. Basically,
Rails at the moment is not http2 compatible. This is due the the current
architecture of Rails and implementation of rack middlewares. During the talk
he was able to demo a prototype Rails that is H2 friendly.&lt;/p&gt;

&lt;p&gt;The best news for Rails developers is that there are plans to for making HTTP
2 compatibility available in Rails 5.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>