<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Moselog</title>
    <link>http://blog.mose.com/</link>
    <description>Recent content on Moselog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Nov 2015 22:10:31 +0800</lastBuildDate>
    <atom:link href="http://blog.mose.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Greenruby 143</title>
      <link>http://blog.mose.com/2015/11/01/greenruby-143</link>
      <pubDate>Sun, 01 Nov 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/11/01/greenruby-143</guid>
      <description>

&lt;h2 id=&#34;the-power-of-dsl:ab3ba7ed22eeaa19b0cb56ca8c01c80b&#34;&gt;The power of DSL&lt;/h2&gt;

&lt;p&gt;While I was playing with &lt;a href=&#34;https://github.com/zetachang/react.rb&#34;&gt;react.rb&lt;/a&gt; and exploring &lt;a href=&#34;http://opalrb.org/&#34;&gt;opal&lt;/a&gt;, I
felt in a totally different world. The power of the DSL already prove its
shine on various occasions. I got to experience it in activeadmin, rspec, and
puppet (but I kind of dislike the one in puppet).&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;m also writing some python, I can see a real difference in expressibility
that can be found in ruby. Really, ruby is a maker tool. Like a toolbox for
making new programming languages, using meta-programming, lambda and other
goodies. This is what, in my opinion, makes ruby unique. Beyond the elegance
of its syntax, it empowers developers with the ability to write dedicated
programming language for any specific use. And this, I didn&amp;rsquo;t find in python.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 142</title>
      <link>http://blog.mose.com/2015/10/25/greenruby-142</link>
      <pubDate>Sun, 25 Oct 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/10/25/greenruby-142</guid>
      <description>

&lt;h2 id=&#34;dst-sucks:30c8323f12e415f49a8e753e970d1ab8&#34;&gt;DST sucks&lt;/h2&gt;

&lt;p&gt;This week-end they changed time in France. As I work with those guys to cover
the watching of servers, then I need to change time too. This is totally lame.
In the context of largely distributed teams, DST is heresy. It happens in the
US too, but not even at the same time. Man I hate DST. I&amp;rsquo;m happy we don&amp;rsquo;t have
that in Taiwan.&lt;/p&gt;

&lt;h2 id=&#34;thunderbird-sucks-too:30c8323f12e415f49a8e753e970d1ab8&#34;&gt;Thunderbird sucks too&lt;/h2&gt;

&lt;p&gt;Despite the respect I have for mozilla products and for their efforts toward
the community, I have to say that I have been using thunderbird for a while
and I don&amp;rsquo;t like it. There is some lack of customability in there, it eats a
whole lot of memory and it&amp;rsquo;s kinda slow sometimes. I have been considering
getting back to mutt, which is a totally different category of mail client.&lt;/p&gt;

&lt;p&gt;But I found &lt;a href=&#34;http://www.claws-mail.org/&#34;&gt;claws&lt;/a&gt;, and trying it for a few days on my various
mailboxes with hundreds of thousands of mails, and it is a very good feeling.
It&amp;rsquo;s much more transparent and hackable and stays in the same category of the
clickable mail client as thunderbird. I&amp;rsquo;m not sure I will stick to claws,
maybe I will get back to mutt that I have been used so many years before. But
I sure will give that &amp;lsquo;email client that bites&amp;rsquo; a try for a while.&lt;/p&gt;

&lt;h2 id=&#34;gmail-sucks-more:30c8323f12e415f49a8e753e970d1ab8&#34;&gt;Gmail sucks more&lt;/h2&gt;

&lt;p&gt;I still can&amp;rsquo;t figure out why people use gmail for reading their mail. I mean,
you leave management of your mail to google, you know what they do with it.
You also want to give them information about how you read your mail? I mean,
using a webmail, first, should be a fallback. But it&amp;rsquo;s mystery for nobody that
google business is in profiling people. It blasts me how people can trust them
blindly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 140</title>
      <link>http://blog.mose.com/2015/10/11/greenruby-140</link>
      <pubDate>Sun, 11 Oct 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/10/11/greenruby-140</guid>
      <description>

&lt;h2 id=&#34;slack-overflow:94c85cedf808f313200328bd388deb80&#34;&gt;Slack overflow&lt;/h2&gt;

&lt;p&gt;Okay I reckon I&amp;rsquo;m very old school. I began on the net with irc and I still stick to it. I have been confused by the trend that make people use Twitter like if it was some kind of real-time interactive medium. I have watched skype becoming unavoidable, and despicable. I hope &lt;a href=&#34;https://telegram.org/&#34;&gt;Telegram&lt;/a&gt; will kill it, honestly.&lt;/p&gt;

&lt;p&gt;I have been using hipchat and slack for work. Hipchat was really cool, but slack came later on and seemed more modern and featurefull. But it didn&amp;rsquo;t have a linux client for a while. So I didn&amp;rsquo;t really played much with it. But now there is a linux client, and it seems that there is an ecosystem nuilding up around slack. As they don&amp;rsquo;t charge for normal usage until you need many integrations with various services, it&amp;rsquo;s pretty easy for anyone to create some new slack team.&lt;/p&gt;

&lt;p&gt;Slack was first designed for teams, and those teams are gathered by invite only. But there are many ways to smooth it up to create some open discussion area that could be compared to irc. But in a way that it includes features that on irc I had to settle myself. For example for sharing code on irc you typically use some pastebin, jsfiddle, or other service of the same kind. In slack code can be pasted in directly or uploaded as a file. For keeping some kind of permanence I always use weechat in a screen on a remote server. That way I never disconnect form irc and I can backlog when I get back. But this is not for everybody and slack has the same kind of feature. But the most noticeable feature in slack is the mobile integration. It beats irc without a doubt.&lt;/p&gt;

&lt;p&gt;Given those benefits, various communities begin to switch from irc to slack. There are even people building up a business creating communities on slack. Check &lt;a href=&#34;http://www.slacklist.info/&#34;&gt;slacklist&lt;/a&gt; or the &lt;a href=&#34;http://chats.directory/&#34;&gt;chat directory&lt;/a&gt;. Some of those slack teams are open, some others are accessible after a review process, some others you have to pay a fee to access them.&lt;/p&gt;

&lt;p&gt;I would not say that slack replaces irc, to be honest, even if it fulfills some similar goal. It&amp;rsquo;s a totally different beast. Plus, that&amp;rsquo;s a third party that keeps all your logs. If security of your content is an issue, you should rather have an internal irc server or try an open source self-hosted slack alternative.&lt;/p&gt;

&lt;p&gt;Currently I got 6 groups on my slack client, including the &lt;a href=&#34;https://greenruby.slack.com/&#34;&gt;Greenruby slack group&lt;/a&gt;. You can ask for an invite at &lt;a href=&#34;mailto:news@greenruby.org&#34;&gt;slack@greenruby.org&lt;/a&gt; it&amp;rsquo;s totally open.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 136</title>
      <link>http://blog.mose.com/2015/09/13/greenruby-136</link>
      <pubDate>Sun, 13 Sep 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/09/13/greenruby-136</guid>
      <description>

&lt;h2 id=&#34;rubyconf-tw:6a0e12fe1d32b33b0719139f3561d417&#34;&gt;Rubyconf TW&lt;/h2&gt;

&lt;p&gt;So these last 2 days we went to RubyConfTW here in Taipei, like every year. At
that occasion I kinda forced my buddies to take part in this rant section. So,
that occasion of meeting the ruby community was as usual very enjoyable. Year
after year we see the same people, the community is solid and persistent.&lt;/p&gt;

&lt;p&gt;Like last years Matz was here and he talked about ruby 3 and, that was a
surprise to me, he talked about getting rid of the GIL very soon. That GIL
topic has been a taboo for so many years. Getting rid off it can change the
position of ruby in the family of the major scripting languages. He also
defined laziness as one of the 3 required characteristics of a good coder. I&amp;rsquo;m
not sure there is anything mainstream about those 3 qualities but for a long
time I had my set of 3 requirements to evaluate a good coder and laziness was
in it. maybe I will develop more about it in another rant.&lt;/p&gt;

&lt;p&gt;During this conference I also had the occasion to hear a lot of direct
feedback from friends of Green Ruby. For example we have an irc channel but
many people are not that comfortable with that chat system from another
century and would prefer a slack room. As a matter of fact we have such a
room, but we forgot about it for the past year. It&amp;rsquo;s alive again, feel free to
send a request for invite to news at greenruby.org to join
&lt;a href=&#34;http://greenruby.slack.com&#34;&gt;http://greenruby.slack.com&lt;/a&gt;. It&amp;rsquo;s open to everybody.&lt;/p&gt;

&lt;h2 id=&#34;rubyconftw-by-xenor:6a0e12fe1d32b33b0719139f3561d417&#34;&gt;Rubyconftw by xenor&lt;/h2&gt;

&lt;p&gt;Hey I&amp;rsquo;m xenor and this is my first rant in Green Ruby News about (and not
about) &lt;a href=&#34;http://2015.rubyconf.tw/&#34;&gt;rubyconftw&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I work in a ruby shop and manage a couple of people, and I am recently feeling
burned-out. It affects motivation and productivity. I am in a position which
involves watching over colleagues output. But I also have my own coding
projects ongoing.&lt;/p&gt;

&lt;p&gt;At first it&amp;rsquo;s great and challenging. But after half a year, it starts to bite
me back. I get tired and anxious about not meeting my goal at the end of the
day while checking others progress. I also need more breaks than usual. The
typical burn-out syndrome.&lt;/p&gt;

&lt;p&gt;Rubyconf gave me a break so that I can rethink what I was doing and how I can
evaluate things around me. During the conference, I found some time to do
&lt;a href=&#34;https://github.com/tubaxenor/squeezer&#34;&gt;side project&lt;/a&gt;. This really helps and re-motivates me on programming
(I believe this could be called &amp;lsquo;Conference Driven Development&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;You might wonder why I didn&amp;rsquo;t say anything about the talks. Actually, talks
are just as great as all other conferences, and can be watched on the
recordings that they will post soon. But the most important part is really the
atmosphere of encouragement to try and learn something new.&lt;/p&gt;

&lt;h2 id=&#34;rubyconftw-by-tysliu:6a0e12fe1d32b33b0719139f3561d417&#34;&gt;Rubyconftw by tysliu&lt;/h2&gt;

&lt;p&gt;Greetings. This is tysliu and this is also my first rant and my experience
from going to 2015 Rubyconf TW.&lt;/p&gt;

&lt;p&gt;The main benefit from attending rubyconf this year is that I said hello to
more people. I met past colleagues and also new people. It feels nice to see
familiar faces and catch up.&lt;/p&gt;

&lt;p&gt;The most interesting talk for me this years was tenderlove&amp;rsquo;s talk. It was
about how he attacked the issue of making Rails HTTP2 friendly. Basically,
Rails at the moment is not http2 compatible. This is due the the current
architecture of Rails and implementation of rack middlewares. During the talk
he was able to demo a prototype Rails that is H2 friendly.&lt;/p&gt;

&lt;p&gt;The best news for Rails developers is that there are plans to for making HTTP
2 compatibility available in Rails 5.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 135</title>
      <link>http://blog.mose.com/2015/09/06/greenruby-135</link>
      <pubDate>Sun, 06 Sep 2015 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/09/06/greenruby-135</guid>
      <description>

&lt;h2 id=&#34;meet-at-rubyconf:5c5ed19a98630bcf79414a52c93d484e&#34;&gt;Meet at rubyconf&lt;/h2&gt;

&lt;p&gt;Next friday we will be at &lt;a href=&#34;http://2015.rubyconf.tw/&#34;&gt;rubyconf Taiwan&lt;/a&gt;. Last year there was
around 300 attendees and there is 256 this year. But maybe there will be more
last minute registration, there is still some &lt;a href=&#34;http://rubytaiwan.kktix.cc/events/rubyconftw2015&#34;&gt;spots available&lt;/a&gt; (well
just 14 at this time). I will also be at the &lt;a href=&#34;http://rubytaiwan.kktix.cc/events/850d36b0&#34;&gt;pre-conf evening&lt;/a&gt; on
wednesday. Good time to meet if you are in Taiwan (we have 37 subscribers
there).&lt;/p&gt;

&lt;h2 id=&#34;some-stats-on-greenruby:5c5ed19a98630bcf79414a52c93d484e&#34;&gt;Some stats on greenruby&lt;/h2&gt;

&lt;p&gt;From time to time I check an export of the subscribers list and do some stats
out of curiosity. As of today there are 1466 subscribers, and more than half
in the US (844) all the rest are in 88 other countries (most in India, UK,
France and Taiwan, in that order). In the US most people are from New-York,
just a little more than Los Angeles, and &lt;a href=&#34;https://en.wikipedia.org/wiki/Monticello,_Kentucky&#34;&gt;Monticello&lt;/a&gt; in Kentucky.
I wonder what there is so special in that city of less than 10k people. Maybe
that&amp;rsquo;s a geo-location glitch? If not, please someone tell me what there is in
that small and probably nice city. But if I had to bet, I would put my money
on the glitch.&lt;/p&gt;

&lt;p&gt;Every week there is a small number of new subscribers, especially during
summer. But if you don&amp;rsquo;t really read or if you don&amp;rsquo;t care that much, please
unsubscribe. I will certainly have to do some invitation to unsubscribe when
we will reach around 2000, because mailchimp if free of charge only under that
limit.&lt;/p&gt;

&lt;p&gt;There are also a lot of unaccounted subscribers to the RSS feed, which is the
most popular page on the website. But I don&amp;rsquo;t use feedburner or any kind of
tracking so I don&amp;rsquo;t really know. And I kind of like it that way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 134</title>
      <link>http://blog.mose.com/2015/08/31/greenruby-134</link>
      <pubDate>Mon, 31 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/08/31/greenruby-134</guid>
      <description>

&lt;h2 id=&#34;the-dimensions-of-coding:b983cb306bd4bcf38c9b84ac40779659&#34;&gt;The dimensions of coding&lt;/h2&gt;

&lt;p&gt;Today while wandering around in my weekly hunt for good links, my eye has been
attracted by a post named &lt;a href=&#34;https://medium.com/@scosta/coding-is-three-dimensional-cb331d1b4ad8&#34;&gt;Coding is three dimensional&lt;/a&gt;. It&amp;rsquo;s quite an
interesting way to consider it. But the reason why it struck me is that it was
missing the fourth dimension. That makes all the difference when you get years
of coding. You know that time is a parameter.&lt;/p&gt;

&lt;p&gt;Code don&amp;rsquo;t exist out of time. It has a past, perspective of a future, that
both shape its current morphology. There are a lot of efforts to produce code
analysis. But the real analyst is an historian and needs a systemic approach
that includes time as a factor. We are still far from being able to automate
that. In some ways, it&amp;rsquo;s a good news, we won&amp;rsquo;t be replaced by small scripts
very soon.&lt;/p&gt;

&lt;p&gt;The time factor is actually the essential element in the &lt;a href=&#34;http://martinfowler.com/bliki/TechnicalDebt.html&#34;&gt;technical debt&lt;/a&gt;
formula. Purist coders can&amp;rsquo;t cope with technical debt but if you have two
onces of business man inside, it makes total sense. The tradeoff in technical
quality versus fast deliverability only makes sense because the timing is
critical. &lt;a href=&#34;https://sites.google.com/site/unclebobconsultingllc/a-mess-is-not-a-technical-debt&#34;&gt;A mess is not a technical debt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If coding was disconnected from the market, and if it was not a business or
more like an art, maybe time would not be that critical. But even open source
software is dependent on the market at one point or another. I fail to see how
it could be different.&lt;/p&gt;

&lt;p&gt;Honestly, I would prefer clean coding and no market tradeoff, but that&amp;rsquo;s just
a dream.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving to Hugo</title>
      <link>http://blog.mose.com/2015/08/28/moving-to-hugo</link>
      <pubDate>Fri, 28 Aug 2015 09:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/08/28/moving-to-hugo</guid>
      <description>&lt;p&gt;As I love website pre-generation concept I have been using &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; and &lt;a href=&#34;http://octopress.org&#34;&gt;Octopress&lt;/a&gt; quite a lot. But now I wanted to give a try to &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, I have had various spaces of blogging in the past few years, so I thought I should just recenter everything in a unique place. There was an old blog on tumblr because I wanted to see how it was made. Then I had a period of time where I was publishing tips on the Faria Devtips website, which is down now. Then I also publish some rants every week on the &lt;a href=&#34;http://greenruby.org&#34;&gt;Greenruby&lt;/a&gt; newsletter.&lt;/p&gt;

&lt;p&gt;Only the last on is still active, so I will cross-post things from there to here, which should not be too hard as they are both markdown.&lt;/p&gt;

&lt;p&gt;The first impression of Hugo is that there are still a lot of small weird things. But in some ways, I&amp;rsquo;m kind of happy about it, I guess I will try to fix some of those, that will be an occasion to play a little with golang.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 133</title>
      <link>http://blog.mose.com/2015/08/23/greenruby-133</link>
      <pubDate>Sun, 23 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/08/23/greenruby-133</guid>
      <description>

&lt;h2 id=&#34;just-met-hugo:7f9ce9f83e9126826117a493b10fad98&#34;&gt;Just met Hugo&lt;/h2&gt;

&lt;p&gt;Some weeks ago I was talking about Octopress. I think pre-generation of
websites is a very sensible approach. And I heard about &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; for some
time now. It&amp;rsquo;s like a cousin of Jekyll but writen in Go. The author of
Middleman (another site generation engine) confessed in a &lt;a href=&#34;https://changelog.com/169/&#34;&gt;recent podcast&lt;/a&gt;
that he would try the Golang way if he had to start from
scratch today.&lt;/p&gt;

&lt;p&gt;I got interested into Hugo mostly because one of the side projects I&amp;rsquo;m working
on. It involves a bunch of people that run on windows. Having a binary that
runs everywhere is a big plus for a gGo solution. Installing ruby is possible
on windows, but not really for noobs afaict.&lt;/p&gt;

&lt;p&gt;Also, I want to check more Go projects. I have been playing in and out that
language for a while now. Version 1.5 seems really great. So I upgraded my
&lt;a href=&#34;https://github.com/moovweb/gvm&#34;&gt;gvm&lt;/a&gt; and installed the thing. Well, I could havce just used the Hugo
binary, but where is the fun in that?&lt;/p&gt;

&lt;p&gt;My first impression is very comfortable. It took a lot of the principles form
Jekyll. But it seems to have some extra options and concepts that may be a
little more advanced and seem very promising. The theming system is especially
cool. I will probably first port my own blog under Hugo before porting my
other project.&lt;/p&gt;

&lt;p&gt;As a matter of fact, that&amp;rsquo;s a while I&amp;rsquo;m considering that I never feed my blog,
but I should copy the rants I write here in there. It can be fun to add a rake
task in the greenruby publication process to also add a page in a nearby hugo
repo and publish it at the same time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 132</title>
      <link>http://blog.mose.com/2015/08/16/greenruby-132</link>
      <pubDate>Sun, 16 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/08/16/greenruby-132</guid>
      <description>

&lt;h2 id=&#34;sexism-and-competition:db2c111cf24dad5b31c1182c9980822d&#34;&gt;Sexism and competition&lt;/h2&gt;

&lt;p&gt;The ruby community is quite blessed in the way that there are very vocal
activist promoting diversity, especially on &lt;a href=&#34;http://railsgirls.com/&#34;&gt;gender parity&lt;/a&gt;. It&amp;rsquo;s
not exclusive to ruby I noticed the same intention in other communities (like
the &lt;a href=&#34;http://www.pyladies.com/&#34;&gt;pyladies&lt;/a&gt; in python).&lt;/p&gt;

&lt;p&gt;Anybody that spent some years in IT cannot avoid to notice that there are
mostly guys. The ladies are either frowned upon or very special cases. For
ages I have been wondering why. My sister is a sysadmin at a university, there
is nothing shocking about that and she does a damn good job.&lt;/p&gt;

&lt;p&gt;So I paid attention on what are the people responsible for that. I identified
various categories of people that I consider are responsible of our lack of
parity. Well, not them directly but the behaviors they perpetuate are
certainly part of the problem. If we could find a way to correct those
behaviors, it would lead to a natural change in the group.&lt;/p&gt;

&lt;p&gt;In all those people I know, and in all their behaviors, I think I detected
something that is related to the Religion Of Competitiveness. Those people are
believers that knowledge is power and they are not gonna share it more than
necessary. They will find anything to avoid more people reach their level of
knowledge. And if they can find some kind of reason to discard other people,
either trivial and socially acceptable in the given group reason to discard
other people, they will do. Gender is the first victim in such a schema. What
is socially acceptable is a self-perpetuated meme.&lt;/p&gt;

&lt;p&gt;Talking to those people is pointless, they are in denial. They see nothing
wrong. You can&amp;rsquo;t change them. You have to change their environment, that will
be the only way.&lt;/p&gt;

&lt;p&gt;So it means that in a competition context, there are still ways to win, by
playing the competition game and winning it. But to break the competition
paradigm, there is a lot to do. Companies policies are not enough to enforce a
more open mindset. But I believe that there is ways to organize the
information in a way that keeping it for oneself devaluates it. And from the
eradication of the tyranny of knowledge, we shall reach a less
competition-based culture in IT. And all discrimination pretexts may vanish by
themselves.&lt;/p&gt;

&lt;p&gt;Rather than fighting for diversity, we should fight against the spirit of
competition. It&amp;rsquo;s kind of not easy, I reckon, because our society tends to
push people to be competitive. That&amp;rsquo;s what capitalism is all about. But IT
population already has proven that the established system don&amp;rsquo;t take hold on
them. Geeks and techies are educated people (often self-educated, but it&amp;rsquo;s the
same) and they can think on their own, chose the path to follow. If you can
find a way, in your context, to change the environment towards less power for
the competitive type of people, that could deserve a try.&lt;/p&gt;

&lt;p&gt;Well, that&amp;rsquo;s just a rant, a wild thought. Such a topic would deserve more
space for development. But that&amp;rsquo;s what I wanted to share this week. Anyways I
doubt there is that much people reading those line hahaha.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 131</title>
      <link>http://blog.mose.com/2015/08/09/greenruby-131</link>
      <pubDate>Sun, 09 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/08/09/greenruby-131</guid>
      <description>

&lt;h2 id=&#34;octopress-3-and-other-thoughts:cfcdc78d89eef0c0b12f3b5b0fcf318d&#34;&gt;Octopress 3 and other thoughts&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m currently involved in a community project and I installed a wordpress.
From time to time I get one up to see how it evolves. But really this thing is
not to my taste. To much trouble for making simple things. I reckon it can be
useful for people with no technical knowledge but then they are going to mess
up everything. The technical advisor still can&amp;rsquo;t be avoided.&lt;/p&gt;

&lt;p&gt;So because now I saw a recent wordpress and didn&amp;rsquo;t like it more than the
previous attempts, I will give a try to the new &lt;a href=&#34;http://octopress.org/&#34;&gt;octopress 3.0&lt;/a&gt;.
The octopress author &lt;a href=&#34;http://octopress.org/2015/01/15/octopress-3.0-is-coming/&#34;&gt;explains&lt;/a&gt; that he&amp;rsquo;s been doing it all wrong and now
on version 3.0 he gets back to sort of a collection of gems that plug into
jekyll. I kind of like the idea.&lt;/p&gt;

&lt;p&gt;Well to be honest I was also tempted to give a try to &lt;a href=&#34;http://www.phoenixframework.org/&#34;&gt;phoenix&lt;/a&gt;, but
I know jekyll already and I don&amp;rsquo;t have that much server resources for that
community project. Static web always have had my preference. But the idea
behind Phoenix is appealing. Like any new project it includes the new things
and don&amp;rsquo;t have to bother about legacy. The channels ideas, creating a stream
between client and server, sounds very appealing.&lt;/p&gt;

&lt;p&gt;But to get back to why I will prefer jekyll over wordpress, is that my
contributors are a mess. They don&amp;rsquo;t care about styling, they copy-paste random
html all over the place and the final look is totally inconsistent. My hope is
that markdown would limit the possibilities of making a mess. But then I will
have to propose them the github edit, as a backend, unless I cheat and use
etherpad-lite as a pre-production backend.&lt;/p&gt;

&lt;p&gt;That &lt;a href=&#34;http://etherpad.org/&#34;&gt;etherpad-lite&lt;/a&gt; thing is amazingly simple, I used sometimes and
making it accessible behind a single password for everybody makes tings pretty
direct. But totally unsafe, I reckon. I will probably have to write some kind
of tool for managing the publication workflow. Hmm, that sounds like fun. If
you ever had the same kind of adventure, please &lt;a href=&#34;mailto:mose@greenruby.org&#34;&gt;share with me&lt;/a&gt; :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 130</title>
      <link>http://blog.mose.com/2015/08/02/greenruby-130</link>
      <pubDate>Sun, 02 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/08/02/greenruby-130</guid>
      <description>

&lt;h2 id=&#34;rubyconf-taiwan-2015:6f1441b48959350386774005adafb7a6&#34;&gt;RubyConf Taiwan 2015&lt;/h2&gt;

&lt;p&gt;In September 11 and 12 there is a &lt;a href=&#34;http://2015.rubyconf.tw/&#34;&gt;Rubyconf here in Taiwan&lt;/a&gt;. I have
been at some past editions and it&amp;rsquo;s always a good time to meet people. Because
we are close to Japan there is usually pretty good ruby core contributors from
there. We get to see Matz, father of ruby, at each edition. But this time it
seems that the organizers pulled some kind of special trick and the famous
&lt;a href=&#34;http://tenderlovemaking.com/&#34;&gt;Aaron Patterson&lt;/a&gt; will be present. And I remember having heard
&lt;a href=&#34;http://devchat.tv/ruby-rogues/149-rr-ruby-in-government-with-sarah-allen&#34;&gt;Sarah Allen on rubyrogues&lt;/a&gt; last year, it is the first time she joins
us in Taiwan too. I think both of them will bring some unique taste to this
years rubyconf.&lt;/p&gt;

&lt;p&gt;If you looked for an occasion to visit Taiwan, that may be the right time. You
won&amp;rsquo;t regret it. The ruby community in Taiwan is quite active and Taiwanese
people are amazingly welcoming to westerners.&lt;/p&gt;

&lt;p&gt;And, if you want to meet the 3 of us, we will all be there. Look around for
Xenor and Tysliu, the famous editors of the Green Ruby newsletter. They
tirelessly collect links and news, fresh from the week, about ruby and other
things. And if you see someone with a Gandi T-Shirt, that will probably be me.
We probably will distribute some green ruby stickers that I still have in
stock. So then we can make new ones.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 129</title>
      <link>http://blog.mose.com/2015/07/26/greenruby-129</link>
      <pubDate>Sun, 26 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/07/26/greenruby-129</guid>
      <description>

&lt;h2 id=&#34;back-on-tweeting:7ae99486640ad70a650c6bd616a3b6cb&#34;&gt;Back on tweeting&lt;/h2&gt;

&lt;p&gt;I really don&amp;rsquo;t like my phone. As an old timer I&amp;rsquo;m reluctant to trust my
android, but it would be the same on an iphone. The way applications require
access to the device, on android, is especially annoying and dishonest. They
make the slope slippery for the sake of saving seconds in adopting new apps,
but it&amp;rsquo;s leading to a total remission of users control over their devices.&lt;/p&gt;

&lt;p&gt;But well, I still have a commute several times a week and I use my phone to
listen to various podcasts. But I recently configured some accounts and some
news readers, so I also can just do some links curation along the way. So I
suspect there will be more tweeting on the &lt;a href=&#34;https://twitter.com/greenrubist&#34;&gt;greenrubist&lt;/a&gt; account from
now on. It helps quite a lot when I want to gather links on every sundays.&lt;/p&gt;

&lt;p&gt;Well, nowadays, most of the links are actually gathered by xenor and tysliu,
but I always add a few on my own (especially the devops ones). Those 2 guys
are really doing an amazing demonstration of consistency. After 129 editions,
we still didn&amp;rsquo;t miss a single one week in our publication. It would not have
been possible without my buddies. Thanks so much for their contribution.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 128</title>
      <link>http://blog.mose.com/2015/07/19/greenruby-128</link>
      <pubDate>Sun, 19 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/07/19/greenruby-128</guid>
      <description>

&lt;h2 id=&#34;rubyconf-taiwan-2015-cfp:abd434c0512885455cdb7b8467442df0&#34;&gt;RubyConf Taiwan 2015 CFP&lt;/h2&gt;

&lt;p&gt;Hey it&amp;rsquo;s time to give it a try, talking at a rubyconf is a great upgrade for
any coder. That rubyconf will happen on september 11-12th in Taipei. &lt;a href=&#34;https://www.ruby-lang.org/en/news/2015/07/14/rubyconftw-2015-call-for-proposals/&#34;&gt;Check it
out&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;nsa-on-github:abd434c0512885455cdb7b8467442df0&#34;&gt;NSA on Github&lt;/h2&gt;

&lt;p&gt;Looks like someone is trying to fight back a reputation of obscurity. While
they are still pushing on more invasion of privacy, they also release some
&lt;a href=&#34;http://fossbytes.com/nsa-open-sources-its-linux-based-cyber-security-tool/&#34;&gt;open source code&lt;/a&gt;. Check the &lt;a href=&#34;https://github.com/NationalSecurityAgency&#34;&gt;NSA github repository&lt;/a&gt;, they
released something already. &lt;a href=&#34;https://github.com/simp&#34;&gt;Simp&lt;/a&gt; especially has a bunch of puppet
modules, but it&amp;rsquo;s designed only for redhat kind of systems. Quite an
interesting move.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 127</title>
      <link>http://blog.mose.com/2015/07/12/greenruby-127</link>
      <pubDate>Sun, 12 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/07/12/greenruby-127</guid>
      <description>

&lt;h2 id=&#34;javascript-and-thoughts-on-programming:5d8b105fb300dee4745f73b31fcdff54&#34;&gt;Javascript and thoughts on programming&lt;/h2&gt;

&lt;p&gt;Recently I&amp;rsquo;ve been playing with Hubot plugins code in coffeescript for our
company. That&amp;rsquo;s a while I didn&amp;rsquo;t do much js but I used it for a long time and
I didn&amp;rsquo;t find it too difficult to catch up. But for some reason, it brought me
the same feeling I have each time I get back to that language. I feel dirty.
Still I can do what I need to do, for sure, but I don&amp;rsquo;t feel like a builder,
more like an acrobat. And I&amp;rsquo;m far from a purist.&lt;/p&gt;

&lt;p&gt;Some people talk about javascript taking over the world. But that language
imho just was there at the right place at the right time. By having a runtime
embedded in browsers and browsers libraries, it has been used to hijack the
most used software on our computers and mobile devices, to transform them into
richer clients. Along the way various layers were added to fulfill the need of
software design, because javascript initial goal was merely DOM manipulation.&lt;/p&gt;

&lt;p&gt;The thing that always stroke me the most with javascript is that despite the
efforts from ecmascript, it has no formal standard or documentation. It is
pretty extensively documented, of course, but because the language is pushed
forward by the implementations rather than from a standard body, it gets a bit
messy.&lt;/p&gt;

&lt;p&gt;I saw a &lt;a href=&#34;http://cube-drone.com/comics/c/relentless-persistence&#34;&gt;drawing&lt;/a&gt; this week that illustrates the mess quite well. It feels
like Javascript is waiting for something to come replace it.&lt;/p&gt;

&lt;p&gt;But there is hope with ES6. Seems like in recent years the normative effort on
the ecmascript standard got some more traction and some more press coverage.
But I personally don&amp;rsquo;t think it&amp;rsquo;s going to bring the solution. I enjoyed
reading the &lt;a href=&#34;http://www.sitepoint.com/future-programming-webassembly-life-after-javascript/&#34;&gt;thoughts of Eric Elliot&lt;/a&gt; on that topic but I&amp;rsquo;m not sure
he&amp;rsquo;s right on everything. But what he&amp;rsquo;s right about, is that there will be an
after-javascript.&lt;/p&gt;

&lt;p&gt;Unless that after javascript doesn&amp;rsquo;t arrive fast enough and gets useless by
some new programming paradigm that may appear one day soon. I mean, in the
next 10 years. At some point, like big data is too complex to be handled by
human, programming will also get too complex and will be handled by
algorithms. We already &lt;a href=&#34;http://phys.org/news/2015-07-code-faster-expert.html&#34;&gt;see it coming&lt;/a&gt;. And all programmers will then
become high end workflow designers or just play with antiquities.&lt;/p&gt;

&lt;p&gt;In this perspective, I think javascript is a great intermediary technology for
the time being, given its pervasive aspect. It&amp;rsquo;s far from satisfying, but it
does the job. But the younger generation should keep an eye on higher level
abstract approaches, like systems architectures, workflow logics, organization
patterns, because imho that will drive software design in the next 10-20
years.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 126</title>
      <link>http://blog.mose.com/2015/07/05/greenruby-126</link>
      <pubDate>Sun, 05 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/07/05/greenruby-126</guid>
      <description>

&lt;h2 id=&#34;digital-generations:2aa08ef814c13d38c5b673b5d5882db4&#34;&gt;Digital Generations&lt;/h2&gt;

&lt;p&gt;I enjoyed very much watching the &lt;a href=&#34;https://www.youtube.com/watch?v=h1TGJJ-F-fE&#34;&gt;keynote from Grady Booch at ICSE&lt;/a&gt;
last week. He retraces the whole history of computing and software engineering
in a very talented way.&lt;/p&gt;

&lt;p&gt;Later on I also watched the &lt;a href=&#34;https://www.youtube.com/watch?v=2kEJoWfobpA&#34;&gt;keynote of Stephen Bourne at BSDCan&lt;/a&gt;,
which also talked about history, but on a specific topic of the creation of
Unix and the shell.&lt;/p&gt;

&lt;p&gt;Usually, I have to say, I consider myself as an old geek. But I&amp;rsquo;m a kid
compared to those guys. It made me wonder what are generations based on the
computerized world. In the physical world it&amp;rsquo;s easy, there are births and
generations are around 20-30 years long. But in our accelerated time frame in
the digital age, what is the measure for generations and where are the gaps ?&lt;/p&gt;

&lt;p&gt;We could consider that some breakthrough are the base of generational shifts.
On the top of my head I would say:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the dinosaurs age, before 70, where computing was just emerging&lt;/li&gt;
&lt;li&gt;the university age, appearing with the interconnectivity between universities between 70 and 80&lt;/li&gt;
&lt;li&gt;the personal computer age, between 80 and 94, with various evolutions of pc available to larger audience&lt;/li&gt;
&lt;li&gt;the hypertext age, between 94 and 2002, start of the public internet, the bubble, the web&lt;/li&gt;
&lt;li&gt;the online age, from 2002 to 2012, with consolidation of big companies, web 2.0 and all&lt;/li&gt;
&lt;li&gt;the mobile age, from 2012 to now, even if mobile appeared previously, it dominates since recently&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I can see an average of 8-15 years in the generations that I feel create
disruptions between each others. People that jump in at one age will suffer a
gap between their age and the next one. Many won&amp;rsquo;t evolve. Few brave ones will
constantly update and jump on the next train.&lt;/p&gt;

&lt;p&gt;But the overlap in digital generations is also different than in traditional
generations. We still have a lot of legacy in our current systems inherited
form the university age. And they don&amp;rsquo;t seem to die, like the TCP stack or the
C language.&lt;/p&gt;

&lt;p&gt;The next age may be the one of the Internet of things and the massive required
switch to IPv6 as default. Which will include automated and autonomous
systems, because they will be things and not part of a contained system. In
something like 3 to 5 years, if I follow the same rough pattern I drew above.
Unless next gap will come with VR and immersive technologies ?&lt;/p&gt;

&lt;p&gt;But I suspect that my simplistic characterization misses all the multi-layered
aspect of the digital age, between the hardware advancements, the software
improvements, the usages evolutions, the protocols modifications, the data
models transformations, etc. I&amp;rsquo;m sure a more complex generational matrix could
be designed if some more thought was given to it. But the gaps are real.&lt;/p&gt;

&lt;p&gt;It feels to me that people that predict that machines are going to take over
the world are actually late, it already happened 40 years ago. It was just
having a limited impact on people lives. Each digital generation dragging more
human in its trails.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t let yourself enclosed in a generation. Our computer overlords won&amp;rsquo;t make
any effort to include you if you drag your feet.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>