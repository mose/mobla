<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Moselog</title>
    <link>http://blog.mose.com/tags/tools/</link>
    <description>Recent content in Tools on Moselog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Apr 2016 22:10:31 +0800</lastBuildDate>
    <atom:link href="http://blog.mose.com/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go again</title>
      <link>http://blog.mose.com/2016/04/10/go-again</link>
      <pubDate>Sun, 10 Apr 2016 22:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2016/04/10/go-again</guid>
      <description>&lt;p&gt;That&amp;rsquo;s years that I&amp;rsquo;m trying to do something real with go. I mean, it is a
very attractive language with quite a special workflow and toolbox. From time
to time I write some small script for keeping contact with that language. Last
week I made &lt;a href=&#34;https://github.com/greenruby/slackpin/blob/master/pins.go&#34;&gt;this one&lt;/a&gt; to list links pinned in our Greenruby
slackroom to prepare the letter, So I can open them all at once to check them
in my browser. With time passing, seems that Go now has a really complete
collection of libraries for a lot of usages. I think I will have push a little
the slack api soon, and maybe do some real go coding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>linux trick: too many logs</title>
      <link>http://blog.mose.com/2015/05/31/linux-trick-too-many-logs</link>
      <pubDate>Sun, 31 May 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/05/31/linux-trick-too-many-logs</guid>
      <description>&lt;p&gt;Recently I found my self again in that situation on a linux server. The
partition where logs are stored went 100%. In such case, It&amp;rsquo;s clever top purge
old useless logfiles. Typical move for me would be to run logrotate manually
with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;logrotate -f /etc/logrotate.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But I had a case where that was not enough. A developer forgot to remove a
debugging output and the logs were just gathering way too much information,
more than what I could free with some janitoring.&lt;/p&gt;

&lt;p&gt;To avoid losing logs, we can move the logfile where there is space and replace
the file with a symbolic link. That&amp;rsquo;s good enough for until the partition gets
resized of the logs get cleaned. But when it&amp;rsquo;s done on a live logfile, the
running process that writes into it still has the same file descriptor. The
process has to be relaunched so the new fd can be taken in account, on the new
partition, as instructed by the symbolic link.&lt;/p&gt;

&lt;p&gt;So a colleague pointed out that could be done without restart by using gdb.
It&amp;rsquo;s a pretty neat trick (if you have gdb installed on your production server,
which may not always be the case, and for good reasons). Anyways I had it at
hand, and here is the sequence:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;touch /path/to/new/logfile

gdb -p pid

(gdb) call dup(1)
$1 = 3
(gdb) call close(1)
$2 = 0
(gdb) call open(&amp;quot;/path/to/new/logfile&amp;quot;, 2)
$3 = 1
(gdb) call close($1)
$4 = 0
(gdb)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gave me the taste of digging up a little bit more on how gdb can interact
with live processes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Happy year of the Goat</title>
      <link>http://blog.mose.com/2015/02/22/happy-year-of-the-goat</link>
      <pubDate>Sun, 22 Feb 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/02/22/happy-year-of-the-goat</guid>
      <description>

&lt;p&gt;Here it was Chinese New Year this week. A good occasion for those who are not
familiar with chinese state of the web to read about its &lt;a href=&#34;http://designbeep.com/2015/02/20/free-download-chinese-new-year-icon-pack-50-icons/&#34;&gt;web design trends 2015&lt;/a&gt;.
This article is pretty deep and reflects accurately how China uses
its connectivity.&lt;/p&gt;

&lt;p&gt;So, xin nian kuai le, and of course, gong xi fa cai. And if you need related
icons, &lt;a href=&#34;http://designbeep.com/2015/02/20/free-download-chinese-new-year-icon-pack-50-icons/&#34;&gt;here are some&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;hello-in-firefox:a9be2ef830fd7cbccc6ae0de53135b81&#34;&gt;Hello in Firefox&lt;/h2&gt;

&lt;p&gt;Now that I&amp;rsquo;m working from Taiwan with a French company, I was have been
searching for a decent solution for video conferencing. Because skype and
google-hangouts are just not things I like to use. I found out that new
versions of firefox include by default a one to one webrtc feature, named
&lt;a href=&#34;https://support.mozilla.org/en-US/kb/firefox-hello-video-and-voice-conversations-online&#34;&gt;Hello&lt;/a&gt;. It works pretty nicely. I also tried out &lt;a href=&#34;https://glideroom.com/&#34;&gt;Glideroom&lt;/a&gt; and
&lt;a href=&#34;https://hu.tt/&#34;&gt;Hutt&lt;/a&gt;. There are also heavier solutions that I tried in the past like the
&lt;a href=&#34;http://bigbluebutton.org/&#34;&gt;big blue button&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately some dude in the ops team pointed out that webrtc was &lt;a href=&#34;https://blog.ipvanish.com/webrtc-security-hole-leaks-real-ip-addresses/&#34;&gt;not
secure&lt;/a&gt;, so it&amp;rsquo;s not likely to become a standard for us. Hrum, well, that&amp;rsquo;s
debatable how proprietary solutions are more secure. There is no way to get it
figured out. Anyways Webrtc became a &lt;a href=&#34;http://www.w3.org/TR/2015/WD-webrtc-20150210/&#34;&gt;w3c standard&lt;/a&gt; recently, and the
section 12, named security, says: TBD. Let&amp;rsquo;s hope it will be done properly.&lt;/p&gt;

&lt;p&gt;Any of you have some first hand experience with any alternative video
conference system, please send me a mail with your feedback.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More Screens</title>
      <link>http://blog.mose.com/2015/01/25/more-screens</link>
      <pubDate>Sun, 25 Jan 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/01/25/more-screens</guid>
      <description>

&lt;p&gt;Some time ago, when I left Faria, I bought a laptop with a clear purpose. I
wanted to have on linux the same screen experience that I had with the macbook
pro connected to 2 thunderbolts. So I got an &lt;a href=&#34;http://www.asus.com/us/Notebooks_Ultrabooks/ASUS_ZENBOOK_UX301LA/&#34;&gt;asus UX301L&lt;/a&gt; plus 2
&lt;a href=&#34;http://accessories.ap.dell.com/sna/productdetail.aspx?c=au&amp;amp;cs=audhs1&amp;amp;l=en&amp;amp;redirect=1&amp;amp;s=dhs&amp;amp;sku=210-40773&#34;&gt;Dell screens U2713HM&lt;/a&gt; who supports a 2560x1440 resolution. The laptop in itself
is amazing, dazzling fast, and all worked well with an ubuntu install. This
was not cheap but that was a while I didn&amp;rsquo;t spend anything on hardware.&lt;/p&gt;

&lt;p&gt;I struggled a bit to find the proper connectors so I could enable the extra
large resolution on connected screens. I ended up using the mini-hdmi
connector plus a mini-display port converter to DVI for the second one. And
finally it worked last week. I had to &lt;a href=&#34;http://www.arunviswanathan.com/node/53&#34;&gt;force the resolution in xrandr&lt;/a&gt; and
now I have a damn huge double display for a total of 7680x1440. What a blast!&lt;/p&gt;

&lt;h2 id=&#34;debian-i3wm-and-urxvt:d021634982f7dcb44b802e2a3d2040a7&#34;&gt;Debian, i3wm and urxvt&lt;/h2&gt;

&lt;p&gt;Well this is an old story. Some time ago I switched from debian + fvwm2/ion to
ubuntu + cinnamon just because I had to know about it. The goal was to be able
to convince my wife (and some other non-techies) to switch to ubuntu. But I
had to know how it worked on a daily basis. And it was a success for most of
it.&lt;/p&gt;

&lt;p&gt;2 years ago at Faria I was given a mac. Well, it was good to know a bit more
about it, my mac knowledge was dating from system 6.7 time. But if the
hardware is really good, the OSX experience didn&amp;rsquo;t really satisfy the geek
that was deep inside me.&lt;/p&gt;

&lt;p&gt;Then I got back into a team that is deeply attached to pure linux traditions,
when I joined Gandi. I now switched back to a debian jessie with &lt;a href=&#34;https://i3wm.org/&#34;&gt;i3wm&lt;/a&gt; on
my work laptop. Wow this feels good to be back to such a rude but flexible
environment. As a matter of fact all went perfectly well and all the tricks I
knew 10 years ago are still very valid.&lt;/p&gt;

&lt;p&gt;I also took that occasion to get back into urxvt, for my terminal emulator.
It&amp;rsquo;s a very badly documented over-powerful tool. But when you get the grasp on
it, possibilities are much more satisfying than with gnome-terminal. I&amp;rsquo;m still
working on &lt;a href=&#34;https://github.com/mose/rcfiles/blob/master/.Xdefaults&#34;&gt;my configuration&lt;/a&gt; to match few features that gnome terminal had
(like font resizing, clipboard management). The &lt;a href=&#34;https://github.com/mose/rcfiles/blob/master/.urxvt/ext/notification&#34;&gt;notification plugin&lt;/a&gt;,
combined with &lt;a href=&#34;http://knopwob.org/dunst/index.html&#34;&gt;dunst&lt;/a&gt;, gives amazing results.&lt;/p&gt;

&lt;p&gt;It feels good to be back into the cave. To mark this change, I didn&amp;rsquo;t shave
for 3 months so now I&amp;rsquo;m really bearded like the old-fashioned linux bears.
Muhaha!&lt;/p&gt;

&lt;p&gt;PS: no worry, I&amp;rsquo;m still fullstack at heart and I still love ruby!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 102</title>
      <link>http://blog.mose.com/2015/01/18/greenruby-102</link>
      <pubDate>Sun, 18 Jan 2015 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2015/01/18/greenruby-102</guid>
      <description>

&lt;h2 id=&#34;while42:7b1eab39a4e6e397eafd98271e67cb67&#34;&gt;While42&lt;/h2&gt;

&lt;p&gt;This week I got in contact with Sylvain from &lt;a href=&#34;http://while42.org&#34;&gt;while42&lt;/a&gt;. It&amp;rsquo;s a social
network for french tech engineers, but with a special touch on it. There is no
facebook page or google group. They intentionally decided to be irl-first. For
people that are most likely to be online all the time, this sounds so
therapeutic! So, I decided, with Thomas from Gandi, to setup a Taiwan chapter.
If you want to know more (and are french, engineer, and living in Taipei) just
drop me a mail.&lt;/p&gt;

&lt;h2 id=&#34;traveling-ruby:7b1eab39a4e6e397eafd98271e67cb67&#34;&gt;Traveling ruby&lt;/h2&gt;

&lt;p&gt;This is a project from the &lt;a href=&#34;http://www.phusion.nl/&#34;&gt;Phusion&lt;/a&gt; people, called &lt;a href=&#34;https://github.com/phusion/traveling-ruby&#34;&gt;Traveling ruby&lt;/a&gt;.
Its purpose is to make it easy to build auto-sustaining tarballs for ruby
programms, including ruby binary and all gems in it. That way you can publish
a tarball and your customer/user will just launch whatever you put in it. No
need to install ruby or any gems.&lt;/p&gt;

&lt;p&gt;I gave it a try yesterday on my &lt;a href=&#34;https://github.com/eduvo/zabbix-ruby-client&#34;&gt;zabbix-ruby-client&lt;/a&gt; gem, and after a few
tweaks (mostly because I wanted to use an unpublished version of my gem), it
all worked pretty fine. Result is a tarball of 8M. Uploaded to the server (an
old squeeze), it just ran the self-contained ruby 2.1.5 with no hassle. It
reminded me a bit of the feeling when you upload a go executable on the
server. Really neat.&lt;/p&gt;

&lt;h2 id=&#34;palm-control:7b1eab39a4e6e397eafd98271e67cb67&#34;&gt;Palm control&lt;/h2&gt;

&lt;p&gt;There are tiny things that can change a lot. My recent tiny thing is the palm
control technique. Every sunday when I prepare Green Ruby I do a huge amount
of copy pasting all over the place. Recently I found on a post about keyboard
someone talking about the palm control technique for avoiding the copypaste
fatigue.&lt;/p&gt;

&lt;p&gt;Well, you need to have a keyboard that makes it possible. Mine is a &lt;a href=&#34;http://support.logitech.com/en_us/product/10104&#34;&gt;Logitech washable k310&lt;/a&gt;.
I already liked its look, and even better, it&amp;rsquo;s perfect for
this palm thing because keys are prominent. Use the palm to push control and
then it&amp;rsquo;s only a matter of hitting c or v with the index. Honestly, it changed
my life!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Console columns</title>
      <link>http://blog.mose.com/2014/09/10/console-columns</link>
      <pubDate>Wed, 10 Sep 2014 12:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/09/10/console-columns</guid>
      <description>&lt;p&gt;When you live in your console, it&amp;rsquo;s always good to find ways to stay there. The &lt;code&gt;column&lt;/code&gt; command was recently brought to my attention by &lt;a href=&#34;https://sysadmincasts.com/episodes/36-cli-monday-column-and-tr&#34;&gt;https://sysadmincasts.com/episodes/36-cli-monday-column-and-tr&lt;/a&gt; and despite years of console life, godamn I was unaware of this simple tool.&lt;/p&gt;

&lt;p&gt;It is very useful for displaying csv files in a readable way, for example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ head members_export_0bfc48c38f.csv
LATITUDE,LONGITUDE,CC,REGION
24.7798,120.93,TW,HSZ
52.0927,5.1158,NL,UT
25.0389,121.509,TW,TPE
47.6836,-122.122,US,WA
24.1403,120.682,TW,TXG
37.4055,-122.078,US,CA
37.4055,-122.078,US,CA
37.4055,-122.078,US,CA
26.1405,-80.1738,US,FL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yuck. Let&amp;rsquo;s prettify it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ head members_export_0bfc48c38f.csv | column -t -s,
LATITUDE  LONGITUDE  CC  REGION
24.7798   120.93     TW  HSZ
52.0927   5.1158     NL  UT
25.0389   121.509    TW  TPE
47.6836   -122.122   US  WA
24.1403   120.682    TW  TXG
37.4055   -122.078   US  CA
37.4055   -122.078   US  CA
37.4055   -122.078   US  CA
26.1405   -80.1738   US  FL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ohh, my world just changed!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pretty json</title>
      <link>http://blog.mose.com/2014/09/10/pretty-json</link>
      <pubDate>Wed, 10 Sep 2014 09:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/09/10/pretty-json</guid>
      <description>&lt;p&gt;JSON prettifying is a reccurent topic, every coder needs it to keep some sanity. My way to do it has been something like this for a while:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ruby -rjson -ropen-uri -rawesome_print -e &amp;quot;ap JSON.load(open(&#39;http://jsonip.com/&#39;))&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;{
       &amp;quot;ip&amp;quot; =&amp;gt; &amp;quot;59.115.120.166&amp;quot;,
    &amp;quot;about&amp;quot; =&amp;gt; &amp;quot;/about&amp;quot;,
     &amp;quot;Pro!&amp;quot; =&amp;gt; &amp;quot;http://getjsonip.com&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;because when you are rubyist everything can be solve with ruby, obviously.&lt;/p&gt;

&lt;p&gt;But well, then one day I did&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install pjson
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and then&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;curl -s http://jsonip.com | pjson
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;Pro!&amp;quot;: &amp;quot;http://getjsonip.com&amp;quot;,
  &amp;quot;about&amp;quot;: &amp;quot;/about&amp;quot;,
  &amp;quot;ip&amp;quot;: &amp;quot;59.115.120.166&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Faster, easier, happier.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tree command</title>
      <link>http://blog.mose.com/2014/07/11/tree-command</link>
      <pubDate>Fri, 11 Jul 2014 14:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/07/11/tree-command</guid>
      <description>&lt;p&gt;There is a shell tool that I install systematically on any new machine/server, it&amp;rsquo;s &lt;code&gt;tree&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install tree
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install tree
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Its very basic usage is to show the content of a dir in an arborescent way, and there are a lot of options. It can be a good alternative to &lt;code&gt;find&lt;/code&gt; sometimes. But I mostly use it for having a quick overview of the content of a dir.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mose@momac &amp;gt; ~ &amp;gt; tree projects/lolita
projects/lolita
├── Gemfile
├── Gemfile.lock
├── README.md
├── config.default.yml
├── config.yml
├── lita-faria
│   ├── Gemfile
│   ├── LICENSE
│   ├── README.md
│   ├── Rakefile
│   ├── lib 
│   │   ├── lita
│   │   │   └── handlers
│   │   │       └── faria.rb
│   │   └── lita-faria.rb
│   ├── lita-faria.gemspec
│   └── spec
│       ├── lita
│       │   └── handlers
│       │       └── faria_spec.rb
│       └── spec_helper.rb
├── lita_config.rb
├── log 
└── tmp 

9 directories, 15 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mose@momac &amp;gt; ~ &amp;gt; tree projects/lolita -hfih -I &#39;spec|lib&#39; --du
projects/lolita
[ 164]  projects/lolita/Gemfile
[1.2K]  projects/lolita/Gemfile.lock
[1.2K]  projects/lolita/README.md
[ 177]  projects/lolita/config.default.yml
[ 222]  projects/lolita/config.yml
[2.6K]  projects/lolita/lita-faria
[  39]  projects/lolita/lita-faria/Gemfile
[1.0K]  projects/lolita/lita-faria/LICENSE
[ 357]  projects/lolita/lita-faria/README.md
[ 117]  projects/lolita/lita-faria/Rakefile
[ 769]  projects/lolita/lita-faria/lita-faria.gemspec
[1.2K]  projects/lolita/lita_config.rb
[ 102]  projects/lolita/log
[ 102]  projects/lolita/tmp

 7.4K used in 3 directories, 11 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;man tree&lt;/code&gt; for more (but the basic tree view is the real deal, for more detailled listings, &lt;code&gt;find&lt;/code&gt; is better).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL in a shell</title>
      <link>http://blog.mose.com/2014/07/04/sql-in-a-shell</link>
      <pubDate>Fri, 04 Jul 2014 14:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/07/04/sql-in-a-shell</guid>
      <description>&lt;p&gt;There is a package that is not installed by default that I now grab systematically, it&amp;rsquo;s called &lt;code&gt;parallel&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install parallel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or on mac&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install parallel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;parallel&lt;/code&gt; command is a pretty complex beast, but the package also comes with the &lt;code&gt;sql&lt;/code&gt; command, which simplifies queries to any database from the console. There is just one     command whatever the sql backend you use.&lt;/p&gt;

&lt;p&gt;I first setup my dburl in &lt;code&gt;.sql/aliases&lt;/code&gt; as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:dbmb mysql:///managebac
:dboa mysql:///openapply
:dbis psql://isis:password@localhost/intersis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And I can then use those aliases for quick sql commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sql :dbmb &amp;quot;select count(*) from users&amp;quot;
sql --show-processlist :dbis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check &lt;a href=&#34;http://www.gnu.org/software/parallel/sql.html&#34;&gt;http://www.gnu.org/software/parallel/sql.html&lt;/a&gt; for more examples of use. Also check &lt;a href=&#34;http://www.gnu.org/software/parallel/package&#34;&gt;http://www.gnu.org/software/parallel/package&lt;/a&gt; it&amp;rsquo;s very powerful, but a bit complicated  to catch it, maybe I will provide some examples of practical use in a later tip.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Less first</title>
      <link>http://blog.mose.com/2014/06/19/less-first</link>
      <pubDate>Thu, 19 Jun 2014 09:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/06/19/less-first</guid>
      <description>

&lt;p&gt;When working on a remote server, I use &lt;code&gt;less&lt;/code&gt; instead of &lt;code&gt;tail&lt;/code&gt; or &lt;code&gt;vi&lt;/code&gt; to check files, the more I can.&lt;/p&gt;

&lt;h2 id=&#34;filter:3480f0a86761ef50d1ed36f6b3b46e94&#34;&gt;filter&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;with &lt;code&gt;&amp;amp;searchstring&lt;/code&gt; it will hide all lines not matching searchstring, like a very simple grep from the console&lt;/li&gt;
&lt;li&gt;just &lt;code&gt;&amp;amp;&lt;/code&gt; with nothing to get back to full view&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;edit-file:3480f0a86761ef50d1ed36f6b3b46e94&#34;&gt;edit file&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;when in &lt;code&gt;less /etc/hosts&lt;/code&gt; if I find out I need to edit it I just type &lt;code&gt;v&lt;/code&gt; it opens it in vi&lt;/li&gt;
&lt;li&gt;when you quit the editor you are back in less&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;follow-mode:3480f0a86761ef50d1ed36f6b3b46e94&#34;&gt;follow mode&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;when in &lt;code&gt;less production.log&lt;/code&gt;, if you want to follow incoming changes type &lt;code&gt;F&lt;/code&gt; it will become like a &lt;code&gt;tail -f&lt;/code&gt; but it keeps the syntax highlighting that was made with a &lt;code&gt;/&lt;/code&gt; search - when in follow mode with &lt;code&gt;F&lt;/code&gt; you can &lt;code&gt;ctrl-c&lt;/code&gt; any time and examine the new stuff&lt;/li&gt;
&lt;li&gt;note that if you are in filter mode the follow respects it (like if you did a &lt;code&gt;grep something/var/log/auth.log | grep &#39;Invalid user&#39;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;multifiles:3480f0a86761ef50d1ed36f6b3b46e94&#34;&gt;multifiles&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;you can open several file and navigate like in vim with &lt;code&gt;:n&lt;/code&gt; and &lt;code&gt;:p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;when less is open you can open a new file with &lt;code&gt;:e&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;call-options-inside-less:3480f0a86761ef50d1ed36f6b3b46e94&#34;&gt;call options inside less&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;you can call any launch option from inside less, one I use often is &lt;code&gt;-S&lt;/code&gt; that will enable/disable wrapping of long lines, very useful when parsing web server log files&lt;/li&gt;
&lt;li&gt;to disable/enable search highlighting just &lt;code&gt;-G&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;any other launch option can be called from inside less, pretty convenient&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hackpad cli</title>
      <link>http://blog.mose.com/2014/05/22/hackpad-cli</link>
      <pubDate>Thu, 22 May 2014 09:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/05/22/hackpad-cli</guid>
      <description>&lt;p&gt;In Faria we use hackpad a lot, it&amp;rsquo;s pretty useful. Mose made a command line interface so he can download all the pads locally and grep them all in one go. It also transforms the markdown much better than the original hackpad markdown export, which totally sucks (as for now). So pads can be recycled easily in github wiki pages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mose/hackpad-cli&#34;&gt;https://github.com/mose/hackpad-cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SSH to socket</title>
      <link>http://blog.mose.com/2014/05/01/ssh-to-socket</link>
      <pubDate>Thu, 01 May 2014 09:10:31 +0800</pubDate>
      
      <guid>http://blog.mose.com/2014/05/01/ssh-to-socket</guid>
      <description>&lt;p&gt;I use a special trick because he&amp;rsquo;s often ssh&amp;rsquo;ing all over the place. Add in your &lt;code&gt;.ssh/config&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host *
  ControlMaster auto
  ControlPath /tmp/%r@%h:%p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will save your first connection to a host as a socket in &lt;code&gt;/tmp&lt;/code&gt; and then all subsequent ssh connections to the same host are open instantly because there is no key renegotiation  on the way. The side effect is that the child-connections cannot be closed until the first one closes, but I find it convenient because it tells me that I still have a console open  on the server that I should close.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>