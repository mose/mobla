<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Moselog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Moselog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Aug 2015 09:10:31 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Moving to Hugo</title>
      <link>http://localhost:1313/2015/08/28/moving-to-hugo</link>
      <pubDate>Fri, 28 Aug 2015 09:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/08/28/moving-to-hugo</guid>
      <description>&lt;p&gt;As I love website pre-generation concept I have been using &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; and &lt;a href=&#34;http://octopress.org&#34;&gt;Octopress&lt;/a&gt; quite a lot. But now I wanted to give a try to &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, I have had various spaces of blogging in the past few years, so I thought I should just recenter everything in a unique place. There was an old blog on tumblr because I wanted to see how it was made. Then I had a period of time where I was publishing tips on the Faria Devtips website, which is down now. Then I also publish some rants every week on the &lt;a href=&#34;http://greenruby.org&#34;&gt;Greenruby&lt;/a&gt; newsletter.&lt;/p&gt;

&lt;p&gt;Only the last on is still active, so I will cross-post things from there to here, which should not be too hard as they are both markdown.&lt;/p&gt;

&lt;p&gt;The first impression of Hugo is that there are still a lot of small weird things. But in some ways, I&amp;rsquo;m kind of happy about it, I guess I will try to fix some of those, that will be an occasion to play a little with golang.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 133</title>
      <link>http://localhost:1313/2015/08/23/greenruby-133</link>
      <pubDate>Sun, 23 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/08/23/greenruby-133</guid>
      <description>

&lt;h2 id=&#34;just-met-hugo:7f9ce9f83e9126826117a493b10fad98&#34;&gt;Just met Hugo&lt;/h2&gt;

&lt;p&gt;Some weeks ago I was talking about Octopress. I think pre-generation of
websites is a very sensible approach. And I heard about &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; for some
time now. It&amp;rsquo;s like a cousin of Jekyll but writen in Go. The author of
Middleman (another site generation engine) confessed in a &lt;a href=&#34;https://changelog.com/169/&#34;&gt;recent podcast&lt;/a&gt;
that he would try the Golang way if he had to start from
scratch today.&lt;/p&gt;

&lt;p&gt;I got interested into Hugo mostly because one of the side projects I&amp;rsquo;m working
on. It involves a bunch of people that run on windows. Having a binary that
runs everywhere is a big plus for a gGo solution. Installing ruby is possible
on windows, but not really for noobs afaict.&lt;/p&gt;

&lt;p&gt;Also, I want to check more Go projects. I have been playing in and out that
language for a while now. Version 1.5 seems really great. So I upgraded my
&lt;a href=&#34;https://github.com/moovweb/gvm&#34;&gt;gvm&lt;/a&gt; and installed the thing. Well, I could havce just used the Hugo
binary, but where is the fun in that?&lt;/p&gt;

&lt;p&gt;My first impression is very comfortable. It took a lot of the principles form
Jekyll. But it seems to have some extra options and concepts that may be a
little more advanced and seem very promising. The theming system is especially
cool. I will probably first port my own blog under Hugo before porting my
other project.&lt;/p&gt;

&lt;p&gt;As a matter of fact, that&amp;rsquo;s a while I&amp;rsquo;m considering that I never feed my blog,
but I should copy the rants I write here in there. It can be fun to add a rake
task in the greenruby publication process to also add a page in a nearby hugo
repo and publish it at the same time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 132</title>
      <link>http://localhost:1313/2015/08/16/greenruby-132</link>
      <pubDate>Sun, 16 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/08/16/greenruby-132</guid>
      <description>

&lt;h2 id=&#34;sexism-and-competition:db2c111cf24dad5b31c1182c9980822d&#34;&gt;Sexism and competition&lt;/h2&gt;

&lt;p&gt;The ruby community is quite blessed in the way that there are very vocal
activist promoting diversity, especially on &lt;a href=&#34;http://railsgirls.com/&#34;&gt;gender parity&lt;/a&gt;. It&amp;rsquo;s
not exclusive to ruby I noticed the same intention in other communities (like
the &lt;a href=&#34;http://www.pyladies.com/&#34;&gt;pyladies&lt;/a&gt; in python).&lt;/p&gt;

&lt;p&gt;Anybody that spent some years in IT cannot avoid to notice that there are
mostly guys. The ladies are either frowned upon or very special cases. For
ages I have been wondering why. My sister is a sysadmin at a university, there
is nothing shocking about that and she does a damn good job.&lt;/p&gt;

&lt;p&gt;So I paid attention on what are the people responsible for that. I identified
various categories of people that I consider are responsible of our lack of
parity. Well, not them directly but the behaviors they perpetuate are
certainly part of the problem. If we could find a way to correct those
behaviors, it would lead to a natural change in the group.&lt;/p&gt;

&lt;p&gt;In all those people I know, and in all their behaviors, I think I detected
something that is related to the Religion Of Competitiveness. Those people are
believers that knowledge is power and they are not gonna share it more than
necessary. They will find anything to avoid more people reach their level of
knowledge. And if they can find some kind of reason to discard other people,
either trivial and socially acceptable in the given group reason to discard
other people, they will do. Gender is the first victim in such a schema. What
is socially acceptable is a self-perpetuated meme.&lt;/p&gt;

&lt;p&gt;Talking to those people is pointless, they are in denial. They see nothing
wrong. You can&amp;rsquo;t change them. You have to change their environment, that will
be the only way.&lt;/p&gt;

&lt;p&gt;So it means that in a competition context, there are still ways to win, by
playing the competition game and winning it. But to break the competition
paradigm, there is a lot to do. Companies policies are not enough to enforce a
more open mindset. But I believe that there is ways to organize the
information in a way that keeping it for oneself devaluates it. And from the
eradication of the tyranny of knowledge, we shall reach a less
competition-based culture in IT. And all discrimination pretexts may vanish by
themselves.&lt;/p&gt;

&lt;p&gt;Rather than fighting for diversity, we should fight against the spirit of
competition. It&amp;rsquo;s kind of not easy, I reckon, because our society tends to
push people to be competitive. That&amp;rsquo;s what capitalism is all about. But IT
population already has proven that the established system don&amp;rsquo;t take hold on
them. Geeks and techies are educated people (often self-educated, but it&amp;rsquo;s the
same) and they can think on their own, chose the path to follow. If you can
find a way, in your context, to change the environment towards less power for
the competitive type of people, that could deserve a try.&lt;/p&gt;

&lt;p&gt;Well, that&amp;rsquo;s just a rant, a wild thought. Such a topic would deserve more
space for development. But that&amp;rsquo;s what I wanted to share this week. Anyways I
doubt there is that much people reading those line hahaha.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 131</title>
      <link>http://localhost:1313/2015/08/09/greenruby-131</link>
      <pubDate>Sun, 09 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/08/09/greenruby-131</guid>
      <description>

&lt;h2 id=&#34;octopress-3-and-other-thoughts:cfcdc78d89eef0c0b12f3b5b0fcf318d&#34;&gt;Octopress 3 and other thoughts&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m currently involved in a community project and I installed a wordpress.
From time to time I get one up to see how it evolves. But really this thing is
not to my taste. To much trouble for making simple things. I reckon it can be
useful for people with no technical knowledge but then they are going to mess
up everything. The technical advisor still can&amp;rsquo;t be avoided.&lt;/p&gt;

&lt;p&gt;So because now I saw a recent wordpress and didn&amp;rsquo;t like it more than the
previous attempts, I will give a try to the new &lt;a href=&#34;http://octopress.org/&#34;&gt;octopress 3.0&lt;/a&gt;.
The octopress author &lt;a href=&#34;http://octopress.org/2015/01/15/octopress-3.0-is-coming/&#34;&gt;explains&lt;/a&gt; that he&amp;rsquo;s been doing it all wrong and now
on version 3.0 he gets back to sort of a collection of gems that plug into
jekyll. I kind of like the idea.&lt;/p&gt;

&lt;p&gt;Well to be honest I was also tempted to give a try to &lt;a href=&#34;http://www.phoenixframework.org/&#34;&gt;phoenix&lt;/a&gt;, but
I know jekyll already and I don&amp;rsquo;t have that much server resources for that
community project. Static web always have had my preference. But the idea
behind Phoenix is appealing. Like any new project it includes the new things
and don&amp;rsquo;t have to bother about legacy. The channels ideas, creating a stream
between client and server, sounds very appealing.&lt;/p&gt;

&lt;p&gt;But to get back to why I will prefer jekyll over wordpress, is that my
contributors are a mess. They don&amp;rsquo;t care about styling, they copy-paste random
html all over the place and the final look is totally inconsistent. My hope is
that markdown would limit the possibilities of making a mess. But then I will
have to propose them the github edit, as a backend, unless I cheat and use
etherpad-lite as a pre-production backend.&lt;/p&gt;

&lt;p&gt;That &lt;a href=&#34;http://etherpad.org/&#34;&gt;etherpad-lite&lt;/a&gt; thing is amazingly simple, I used sometimes and
making it accessible behind a single password for everybody makes tings pretty
direct. But totally unsafe, I reckon. I will probably have to write some kind
of tool for managing the publication workflow. Hmm, that sounds like fun. If
you ever had the same kind of adventure, please &lt;a href=&#34;mailto:mose@greenruby.org&#34;&gt;share with me&lt;/a&gt; :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 130</title>
      <link>http://localhost:1313/2015/08/02/greenruby-130</link>
      <pubDate>Sun, 02 Aug 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/08/02/greenruby-130</guid>
      <description>

&lt;h2 id=&#34;rubyconf-taiwan-2015:6f1441b48959350386774005adafb7a6&#34;&gt;RubyConf Taiwan 2015&lt;/h2&gt;

&lt;p&gt;In September 11 and 12 there is a &lt;a href=&#34;http://2015.rubyconf.tw/&#34;&gt;Rubyconf here in Taiwan&lt;/a&gt;. I have
been at some past editions and it&amp;rsquo;s always a good time to meet people. Because
we are close to Japan there is usually pretty good ruby core contributors from
there. We get to see Matz, father of ruby, at each edition. But this time it
seems that the organizers pulled some kind of special trick and the famous
&lt;a href=&#34;http://tenderlovemaking.com/&#34;&gt;Aaron Patterson&lt;/a&gt; will be present. And I remember having heard
&lt;a href=&#34;http://devchat.tv/ruby-rogues/149-rr-ruby-in-government-with-sarah-allen&#34;&gt;Sarah Allen on rubyrogues&lt;/a&gt; last year, it is the first time she joins
us in Taiwan too. I think both of them will bring some unique taste to this
years rubyconf.&lt;/p&gt;

&lt;p&gt;If you looked for an occasion to visit Taiwan, that may be the right time. You
won&amp;rsquo;t regret it. The ruby community in Taiwan is quite active and Taiwanese
people are amazingly welcoming to westerners.&lt;/p&gt;

&lt;p&gt;And, if you want to meet the 3 of us, we will all be there. Look around for
Xenor and Tysliu, the famous editors of the Green Ruby newsletter. They
tirelessly collect links and news, fresh from the week, about ruby and other
things. And if you see someone with a Gandi T-Shirt, that will probably be me.
We probably will distribute some green ruby stickers that I still have in
stock. So then we can make new ones.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 129</title>
      <link>http://localhost:1313/2015/07/26/greenruby-129</link>
      <pubDate>Sun, 26 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/07/26/greenruby-129</guid>
      <description>

&lt;h2 id=&#34;back-on-tweeting:7ae99486640ad70a650c6bd616a3b6cb&#34;&gt;Back on tweeting&lt;/h2&gt;

&lt;p&gt;I really don&amp;rsquo;t like my phone. As an old timer I&amp;rsquo;m reluctant to trust my
android, but it would be the same on an iphone. The way applications require
access to the device, on android, is especially annoying and dishonest. They
make the slope slippery for the sake of saving seconds in adopting new apps,
but it&amp;rsquo;s leading to a total remission of users control over their devices.&lt;/p&gt;

&lt;p&gt;But well, I still have a commute several times a week and I use my phone to
listen to various podcasts. But I recently configured some accounts and some
news readers, so I also can just do some links curation along the way. So I
suspect there will be more tweeting on the &lt;a href=&#34;https://twitter.com/greenrubist&#34;&gt;greenrubist&lt;/a&gt; account from
now on. It helps quite a lot when I want to gather links on every sundays.&lt;/p&gt;

&lt;p&gt;Well, nowadays, most of the links are actually gathered by xenor and tysliu,
but I always add a few on my own (especially the devops ones). Those 2 guys
are really doing an amazing demonstration of consistency. After 129 editions,
we still didn&amp;rsquo;t miss a single one week in our publication. It would not have
been possible without my buddies. Thanks so much for their contribution.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 128</title>
      <link>http://localhost:1313/2015/07/19/greenruby-128</link>
      <pubDate>Sun, 19 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/07/19/greenruby-128</guid>
      <description>

&lt;h2 id=&#34;rubyconf-taiwan-2015-cfp:abd434c0512885455cdb7b8467442df0&#34;&gt;RubyConf Taiwan 2015 CFP&lt;/h2&gt;

&lt;p&gt;Hey it&amp;rsquo;s time to give it a try, talking at a rubyconf is a great upgrade for
any coder. That rubyconf will happen on september 11-12th in Taipei. &lt;a href=&#34;https://www.ruby-lang.org/en/news/2015/07/14/rubyconftw-2015-call-for-proposals/&#34;&gt;Check it
out&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;nsa-on-github:abd434c0512885455cdb7b8467442df0&#34;&gt;NSA on Github&lt;/h2&gt;

&lt;p&gt;Looks like someone is trying to fight back a reputation of obscurity. While
they are still pushing on more invasion of privacy, they also release some
&lt;a href=&#34;http://fossbytes.com/nsa-open-sources-its-linux-based-cyber-security-tool/&#34;&gt;open source code&lt;/a&gt;. Check the &lt;a href=&#34;https://github.com/NationalSecurityAgency&#34;&gt;NSA github repository&lt;/a&gt;, they
released something already. &lt;a href=&#34;https://github.com/simp&#34;&gt;Simp&lt;/a&gt; especially has a bunch of puppet
modules, but it&amp;rsquo;s designed only for redhat kind of systems. Quite an
interesting move.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 127</title>
      <link>http://localhost:1313/2015/07/12/greenruby-127</link>
      <pubDate>Sun, 12 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/07/12/greenruby-127</guid>
      <description>

&lt;h2 id=&#34;javascript-and-thoughts-on-programming:5d8b105fb300dee4745f73b31fcdff54&#34;&gt;Javascript and thoughts on programming&lt;/h2&gt;

&lt;p&gt;Recently I&amp;rsquo;ve been playing with Hubot plugins code in coffeescript for our
company. That&amp;rsquo;s a while I didn&amp;rsquo;t do much js but I used it for a long time and
I didn&amp;rsquo;t find it too difficult to catch up. But for some reason, it brought me
the same feeling I have each time I get back to that language. I feel dirty.
Still I can do what I need to do, for sure, but I don&amp;rsquo;t feel like a builder,
more like an acrobat. And I&amp;rsquo;m far from a purist.&lt;/p&gt;

&lt;p&gt;Some people talk about javascript taking over the world. But that language
imho just was there at the right place at the right time. By having a runtime
embedded in browsers and browsers libraries, it has been used to hijack the
most used software on our computers and mobile devices, to transform them into
richer clients. Along the way various layers were added to fulfill the need of
software design, because javascript initial goal was merely DOM manipulation.&lt;/p&gt;

&lt;p&gt;The thing that always stroke me the most with javascript is that despite the
efforts from ecmascript, it has no formal standard or documentation. It is
pretty extensively documented, of course, but because the language is pushed
forward by the implementations rather than from a standard body, it gets a bit
messy.&lt;/p&gt;

&lt;p&gt;I saw a &lt;a href=&#34;http://cube-drone.com/comics/c/relentless-persistence&#34;&gt;drawing&lt;/a&gt; this week that illustrates the mess quite well. It feels
like Javascript is waiting for something to come replace it.&lt;/p&gt;

&lt;p&gt;But there is hope with ES6. Seems like in recent years the normative effort on
the ecmascript standard got some more traction and some more press coverage.
But I personally don&amp;rsquo;t think it&amp;rsquo;s going to bring the solution. I enjoyed
reading the &lt;a href=&#34;http://www.sitepoint.com/future-programming-webassembly-life-after-javascript/&#34;&gt;thoughts of Eric Elliot&lt;/a&gt; on that topic but I&amp;rsquo;m not sure
he&amp;rsquo;s right on everything. But what he&amp;rsquo;s right about, is that there will be an
after-javascript.&lt;/p&gt;

&lt;p&gt;Unless that after javascript doesn&amp;rsquo;t arrive fast enough and gets useless by
some new programming paradigm that may appear one day soon. I mean, in the
next 10 years. At some point, like big data is too complex to be handled by
human, programming will also get too complex and will be handled by
algorithms. We already &lt;a href=&#34;http://phys.org/news/2015-07-code-faster-expert.html&#34;&gt;see it coming&lt;/a&gt;. And all programmers will then
become high end workflow designers or just play with antiquities.&lt;/p&gt;

&lt;p&gt;In this perspective, I think javascript is a great intermediary technology for
the time being, given its pervasive aspect. It&amp;rsquo;s far from satisfying, but it
does the job. But the younger generation should keep an eye on higher level
abstract approaches, like systems architectures, workflow logics, organization
patterns, because imho that will drive software design in the next 10-20
years.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 126</title>
      <link>http://localhost:1313/2015/07/05/greenruby-126</link>
      <pubDate>Sun, 05 Jul 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/07/05/greenruby-126</guid>
      <description>

&lt;h2 id=&#34;digital-generations:2aa08ef814c13d38c5b673b5d5882db4&#34;&gt;Digital Generations&lt;/h2&gt;

&lt;p&gt;I enjoyed very much watching the &lt;a href=&#34;https://www.youtube.com/watch?v=h1TGJJ-F-fE&#34;&gt;keynote from Grady Booch at ICSE&lt;/a&gt;
last week. He retraces the whole history of computing and software engineering
in a very talented way.&lt;/p&gt;

&lt;p&gt;Later on I also watched the &lt;a href=&#34;https://www.youtube.com/watch?v=2kEJoWfobpA&#34;&gt;keynote of Stephen Bourne at BSDCan&lt;/a&gt;,
which also talked about history, but on a specific topic of the creation of
Unix and the shell.&lt;/p&gt;

&lt;p&gt;Usually, I have to say, I consider myself as an old geek. But I&amp;rsquo;m a kid
compared to those guys. It made me wonder what are generations based on the
computerized world. In the physical world it&amp;rsquo;s easy, there are births and
generations are around 20-30 years long. But in our accelerated time frame in
the digital age, what is the measure for generations and where are the gaps ?&lt;/p&gt;

&lt;p&gt;We could consider that some breakthrough are the base of generational shifts.
On the top of my head I would say:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the dinosaurs age, before 70, where computing was just emerging&lt;/li&gt;
&lt;li&gt;the university age, appearing with the interconnectivity between universities between 70 and 80&lt;/li&gt;
&lt;li&gt;the personal computer age, between 80 and 94, with various evolutions of pc available to larger audience&lt;/li&gt;
&lt;li&gt;the hypertext age, between 94 and 2002, start of the public internet, the bubble, the web&lt;/li&gt;
&lt;li&gt;the online age, from 2002 to 2012, with consolidation of big companies, web 2.0 and all&lt;/li&gt;
&lt;li&gt;the mobile age, from 2012 to now, even if mobile appeared previously, it dominates since recently&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I can see an average of 8-15 years in the generations that I feel create
disruptions between each others. People that jump in at one age will suffer a
gap between their age and the next one. Many won&amp;rsquo;t evolve. Few brave ones will
constantly update and jump on the next train.&lt;/p&gt;

&lt;p&gt;But the overlap in digital generations is also different than in traditional
generations. We still have a lot of legacy in our current systems inherited
form the university age. And they don&amp;rsquo;t seem to die, like the TCP stack or the
C language.&lt;/p&gt;

&lt;p&gt;The next age may be the one of the Internet of things and the massive required
switch to IPv6 as default. Which will include automated and autonomous
systems, because they will be things and not part of a contained system. In
something like 3 to 5 years, if I follow the same rough pattern I drew above.
Unless next gap will come with VR and immersive technologies ?&lt;/p&gt;

&lt;p&gt;But I suspect that my simplistic characterization misses all the multi-layered
aspect of the digital age, between the hardware advancements, the software
improvements, the usages evolutions, the protocols modifications, the data
models transformations, etc. I&amp;rsquo;m sure a more complex generational matrix could
be designed if some more thought was given to it. But the gaps are real.&lt;/p&gt;

&lt;p&gt;It feels to me that people that predict that machines are going to take over
the world are actually late, it already happened 40 years ago. It was just
having a limited impact on people lives. Each digital generation dragging more
human in its trails.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t let yourself enclosed in a generation. Our computer overlords won&amp;rsquo;t make
any effort to include you if you drag your feet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 125</title>
      <link>http://localhost:1313/2015/06/28/greenruby-125</link>
      <pubDate>Sun, 28 Jun 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/06/28/greenruby-125</guid>
      <description>

&lt;h2 id=&#34;a-taste-of-freebsd:2e9f17a4684b1292d2dd8dbb76b48337&#34;&gt;a taste of FreeBSD&lt;/h2&gt;

&lt;p&gt;This weekend I installed &lt;a href=&#34;http://freebsd.org&#34;&gt;FreeBSD&lt;/a&gt; 10.1 on a disk of my desktop.
Beyond the fact that we are using that system at work, more and more, I was
just curious about the setup for a desktop. I was pleasantly surprised and
everything went very smoothly.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m quite familiar with Linux and that was enough for making the ride very
easy. The general impression is that actually the system is simpler than on
Linux, maybe more consistent. The pkg system, alternative to the traditional
ports system, makes thing much more &amp;lsquo;out of the box&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;And for the rest, well, in one afternoon, and just by following the doc, I had
my window manager up and running, and ready to begin playing with
&lt;a href=&#34;https://wiki.freebsd.org/bhyve&#34;&gt;bhyve&lt;/a&gt;. I was surprised to see that bhyve kernel modules were included
by default in recent releases. I heard there are still some bumps on the road
for laptop about the sleep to disk mode, but I&amp;rsquo;m not concerned by that.&lt;/p&gt;

&lt;p&gt;It feels like BSD is a shy actor that actually powers much more stuff that we
can suspect. But it has a pretty active community and a very decent
documentation. Well, give it a try if you like playing with various
distributions of free and open operating systems. It&amp;rsquo;s much less scary that
its reputation seems to convey.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 124</title>
      <link>http://localhost:1313/2015/06/21/greenruby-124</link>
      <pubDate>Sun, 21 Jun 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/06/21/greenruby-124</guid>
      <description>

&lt;h2 id=&#34;the-yin-and-yang-of-software-development:aff213456bcfa77c48418a9edd40a18a&#34;&gt;The yin and yang of software development&lt;/h2&gt;

&lt;p&gt;The topic I talked about last week led me to think about it more widely. And I
ended up with the thinking that many problems in software companies are a
clear problem of balance between their yin and their yang.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&#34;https://en.wikipedia.org/wiki/Yin_and_yang&#34;&gt;old chinese principle&lt;/a&gt; is documented in a very old-fashioned
way, opposing genders and principles. But actually it sums up in the fact that
many dynamics are to be based in a balance between two opposing principles.
Otherwise they fail.&lt;/p&gt;

&lt;p&gt;The way I see it, software developers are a nurturing kind. This profile has
to consider long term. It decides actions for later outcomes. It&amp;rsquo;s about
giving life and growing it. It feels closer to the Yin principle.&lt;/p&gt;

&lt;p&gt;On another hand, the business people are bound to a shorter time frame. And I
don&amp;rsquo;t talk about the entrepreneurs and the rare visionary people, but the real
business work force. They are competitive, aggressive, fighters. That really
feels to me like the Yang concept.&lt;/p&gt;

&lt;p&gt;And all occurrences where I saw software companies failing, I think it was
because there was a lack of balance between those 2 principles. Either the
management was too soft and not aggressive enough towards its market, either
it was too aggressive and nurturing was not considered enough in their
equation.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t think that this balance requirement applies to everything, to be
honest. But in a constituted body of a software organization, considering the
current (questionable) market economy, it feels that the Yin and the Yang have
to be in balance to grant a chance of survival to the organization.&lt;/p&gt;

&lt;p&gt;One may have the feeling that the dominant Yang (business side) is the more
common case. But they are just more noisy. Many projects stay silently in the
darkness just because there was no real business consideration (or even
refusal of it).&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://modeling-languages.com/grady-booch-on-the-future-of-software-engineering-video-and-highlights/&#34;&gt;keynote of Grady Booch&lt;/a&gt; (linked in the video section) confirmed
me in various ways in this opinion. Engineers have the duty to fight for the
balance when they can. They have to understand that it&amp;rsquo;s not a one-way deal,
as well. If you want to exercise programming in a nurturing-only context, win
a lottery and dedicate your time writing free software (where market
requirements don&amp;rsquo;t apply). But in the usual case, you may have to consider if
you are in a balanced context, and if not, try to work on balancing it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 123</title>
      <link>http://localhost:1313/2015/06/14/greenruby-123</link>
      <pubDate>Sun, 14 Jun 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/06/14/greenruby-123</guid>
      <description>

&lt;h2 id=&#34;a-word-about-project-gardening:3f19ca908c642cafd8c3253d0dfb2a28&#34;&gt;A word about project gardening&lt;/h2&gt;

&lt;p&gt;In the last 2 companies where I worked, there was this recurring issue.
Actually I noticed it for a while but for some reasons it became more obvious
to me with time passing. The project management role is usually badly
fulfilled.&lt;/p&gt;

&lt;p&gt;But at some point, and even from the point of view of a developer, there is in
projects the need for a dedicated person for doing some gardening. Yeah it&amp;rsquo;s
all about daily ungrateful clearing the bad weeds, making sure the soil is
rich enough, and that the seeds are all planted where they should be planted,
that soil pH is adequate for this or that variety. Having someone that is just
doing moderation on projects also frees the productive people from lengthly
and sometimes non technical meetings. It is the occasion to have someone that
keeps track of specs, sometimes gather them or (re)write them down in a
central place.&lt;/p&gt;

&lt;p&gt;The problem in the transition from waterfall to agile, is that in the
waterfall model there is a hierarchic feeling in the role of the project
manager. The Management word into it is misleading. It leads the developers to
frown upon it. I have the impression that in agile teams, project management
is supposed to be taken care of organically by the dev teams, sometimes by the
scrum master or whatever facilitator is there for enforcing the agile process.
Or the product owner will be technical enough to fill up that role. More or
less.&lt;/p&gt;

&lt;p&gt;But the reality is that project grooming is a full time job that may have to
be re-invented. It certainly should take in account developers creativity and
pertinence in the match of the objectives with the technical realities. But
it&amp;rsquo;s necessary to have a person that is the reference on keeping track of the
need and follow the quality process at all the stages. Well, at least when you
begin to get many developers and many projects, and developers that work on
many projects.&lt;/p&gt;

&lt;p&gt;I think it&amp;rsquo;s a question of scale. Companies with less than 30 people may never
face that need because there is a natural fluidity internally and not that
many projects. But when you get to 100 and you still don&amp;rsquo;t have people
dedicated to projects, then you can see developers burning out. Projects
become lousy because nobody has time to write specs. You also can see
emergence of hero coders that can by miracle make it all happen. But you will
postpone the problem because heroes are not scalable and can even be toxic on
the long run (as any experienced practitioner already knows).&lt;/p&gt;

&lt;p&gt;Personally in my technical career I never liked the project managers that I
met. But that is a long time I didn&amp;rsquo;t meet any. It dates from an age where
agile was not there yet. But now that I don&amp;rsquo;t see them anymore, I feel that
something is missing. It certainly exists in various places. And I can bet
that many of them are as bad as they were in the last century. But maybe there
is a new species of project curators out there that I didn&amp;rsquo;t meet yet. I read
about those in various places, but in my (small) world, this is still a
mythical beast.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 122</title>
      <link>http://localhost:1313/2015/06/07/greenruby-122</link>
      <pubDate>Sun, 07 Jun 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/06/07/greenruby-122</guid>
      <description>

&lt;h2 id=&#34;thought-about-python-fron-a-rubyist:cdf97fab83b684f4dce127ec09f067df&#34;&gt;Thought about python fron a rubyist&lt;/h2&gt;

&lt;p&gt;This weekend there was a python conference here in Taipei (&lt;a href=&#34;https://tw.pycon.org/2015apac/en/&#34;&gt;pycon apac&lt;/a&gt;).
As Gandi was sponsoring it, I &lt;a href=&#34;https://www.flickr.com/photos/43946968@N07/sets/72157653640049980&#34;&gt;went there&lt;/a&gt; and tried to
figure out how python and ruby communities differ in my local area. As a
matter of fact, I also push my python coding skills a bit. I kind of like to
nurture a general polyglot approach.&lt;/p&gt;

&lt;p&gt;It first seems that the python community is more largely supported by sponsors
than ruby one. It&amp;rsquo;s more mainstream in the general engineering world, I guess.
There was google, facebook, microsoft, having a table and talking about their
cloud things. But the general setup was pretty similar to the ruby or rails
conf I&amp;rsquo;ve been in.&lt;/p&gt;

&lt;p&gt;The topics in this conference were maybe a little more scientific and less
web-oriented than we can find in ruby world. Python has tighter bindings with
lower level languages. I think it&amp;rsquo;s not a specificity of the language because
you also can build C extensions for ruby. But it&amp;rsquo;s more a result of the
community interests.&lt;/p&gt;

&lt;p&gt;I have the feeling that the ruby community dedicated more efforts towards the
web front and other rails related principle like testing suites, DSL and
meta-programming. But my general feeling is that there is no technical reason
for that. It&amp;rsquo;s just how things happened over time, mostly given the weight of
rails in the ruby communities.&lt;/p&gt;

&lt;p&gt;Actually, I also had the feeling that pythonists don&amp;rsquo;t consider ruby as a
&amp;lsquo;competitor&amp;rsquo;. They feel closer to java, node or golang, and at various
occasion I had the impression that they consider ruby to be only the language
behind rails.&lt;/p&gt;

&lt;p&gt;I also thought that the ruby community was special about its adoption of
macbook laptops. Even if actually the python coder has more diversity, I
evaluate around half macbooks, the rest split between ubuntu and windows. It&amp;rsquo;s
less that in ruby confs where macbooks are kinda 90% and windows users are
very few.&lt;/p&gt;

&lt;p&gt;Also, I noticed a similar movement about diversity with &lt;a href=&#34;http://djangogirls.org/taipei/&#34;&gt;django girls&lt;/a&gt;
and &lt;a href=&#34;http://www.meetup.com/PyLadiesTW/&#34;&gt;pyladies&lt;/a&gt;, comparable to the rails girls,
which tries to close the gender gap in the engineering world.&lt;/p&gt;

&lt;p&gt;Anyways that was good and interesting. Geeks are the same kind, whatever
language they use (by trade or by taste). I strongly advise, if you have the
occasion, to wander out of your usual communities and join other circles. It
gives a good perspective on you usual world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 121</title>
      <link>http://localhost:1313/2015/05/31/greenruby-121</link>
      <pubDate>Sun, 31 May 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/05/31/greenruby-121</guid>
      <description>

&lt;h2 id=&#34;linux-trick-too-many-logs:195c338923f21c367264a5b5fb00e8a9&#34;&gt;linux trick: too many logs&lt;/h2&gt;

&lt;p&gt;Recently I found my self again in that situation on a linux server. The
partition where logs are stored went 100%. In such case, It&amp;rsquo;s clever top purge
old useless logfiles. Typical move for me would be to run logrotate manually
with&lt;/p&gt;

&lt;p&gt;logrotate -f /etc/logrotate.conf&lt;/p&gt;

&lt;p&gt;But I had a case where that was not enough. A developer forgot to remove a
debugging output and the logs were just gathering way too much information,
more than what I could free with some janitoring.&lt;/p&gt;

&lt;p&gt;To avoid losing logs, we can move the logfile where there is space and replace
the file with a symbolic link. That&amp;rsquo;s good enough for until the partition gets
resized of the logs get cleaned. But when it&amp;rsquo;s done on a live logfile, the
running process that writes into it still has the same file descriptor. The
process has to be relaunched so the new fd can be taken in account, on the new
partition, as instructed by the symbolic link.&lt;/p&gt;

&lt;p&gt;So a colleague pointed out that could be done without restart by using gdb.
It&amp;rsquo;s a pretty neat trick (if you have gdb installed on your production server,
which may not always be the case, and for good reasons). Anyways I had it at
hand, and here is the sequence:&lt;/p&gt;

&lt;p&gt;touch /path/to/new/logfile&lt;/p&gt;

&lt;p&gt;gdb -p pid&lt;/p&gt;

&lt;p&gt;(gdb) call dup(1)
  $1 = 3
  (gdb) call close(1)
  $2 = 0
  (gdb) call open(&amp;ldquo;/path/to/new/logfile&amp;rdquo;, 2)
  $3 = 1
  (gdb) call close($1)
  $4 = 0
  (gdb)&lt;/p&gt;

&lt;p&gt;This gave me the taste of digging up a little bit more on how gdb can interact
with live processes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenruby 120</title>
      <link>http://localhost:1313/2015/05/24/greenruby-120</link>
      <pubDate>Sun, 24 May 2015 12:10:31 +0800</pubDate>
      
      <guid>http://localhost:1313/2015/05/24/greenruby-120</guid>
      <description>

&lt;h2 id=&#34;the-side-effects-of-recruitment:849328e7dfc904a2b6d861e0036f0df4&#34;&gt;The side effects of recruitment&lt;/h2&gt;

&lt;p&gt;Recently I had to look for a new devops for our team. I have been handling
technical recruitment at many occasions, and each time I have to explain my
colleagues that I have a special process. The fact is, the technical sphere is
a small one, we are all linked, more or less, to a community. Well, in my
case, I always have had to recruit people in companies that were hiring the
kind of people that commit on github, have some kind of community activity, at
least. I guess that in huge companies where people are just a set of
checkboxes, things go a bit differently.&lt;/p&gt;

&lt;p&gt;But anyways, in my case, and probably in the case of all recruiters in modern
and small businesses, it&amp;rsquo;s not all about checkboxes and profiles. It&amp;rsquo;s about
personality, compatibility, and mindset. So when I first get a contact with a
candidate, I invite him (or much more rarely, her), to a chat online,
preferably on irc or whatever real-time discussion media is more fit (for a
linux geek, if you can&amp;rsquo;t go on irc, then there is a problem).&lt;/p&gt;

&lt;p&gt;I noticed that during my past sessions of recruitment, I established contacts
with very interesting people. By having an unformal discussion online, just
chit-chating of what work we do and what we did before, it&amp;rsquo;s kind of easy to
get an idea of what is the kind of relationship you will have with your
potential future colleague. But beyond that, it&amp;rsquo;s all about making things
personal. We are all unique. It cannot be computed, scripted, engineered in a
way that non-technical people would be successful conducting that process. It
takes a geek to recognize another geek.&lt;/p&gt;

&lt;p&gt;At Gandi of course we have a HR person. But she usually appears at the very
end of the process and not at the beginning. The peers are going to evaluate
candidates, make their mind to see if they want to spend days and days
collaborating with them. It matches with my way to do things, fortunately. If
I have any doubt of the technical abilities on someone, I don&amp;rsquo;t do stupid
technical tests, I try to find other people that know the candidate and get
third party feedback. If not, then I try to use a meetup in a community
related to the speciality in question, so we can discuss and be around other
people where some tangent discussion can happen.&lt;/p&gt;

&lt;p&gt;At the end, if all goes well, then the candidate is going to enter the more
formal whatever the company uses as a recruitment flow. But that&amp;rsquo;s merely a
formality. And after 20 years building up teams and recruiting people, I can
affirm that instinct always wins, in my case. If I smell anything fishy in an
unformal context, there is going to be problems. Well, the process is never
perfect, it also can smell ok but stink after 3 months, too.&lt;/p&gt;

&lt;p&gt;But the thing is that having those chats online with peers is pretty
interesting. I learn a lot about how other companies work, how they handle
their management, what kind of work conditions they have. Just because it&amp;rsquo;s
part of the contact process. So I&amp;rsquo;m not really in hurry to make a final
decision because, to be honest, I just enjoy those contacts.&lt;/p&gt;

&lt;p&gt;It certainly takes some time, I can&amp;rsquo;t be in constant recruitment, but from
time to time, it&amp;rsquo;s very valuable. And not only for the effect of recruiting
someone. It creates bonds with the industry, with people, with communities.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>